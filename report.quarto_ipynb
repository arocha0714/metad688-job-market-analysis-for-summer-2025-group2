{
  "cells": [
    {
      "cell_type": "raw",
      "metadata": {},
      "source": [
        "---\n",
        "title: report\n",
        "format: docx\n",
        "bibliography: references.bib\n",
        "csl: csl/econometrica.csl\n",
        "execute: \n",
        "  echo: false\n",
        "  warning: false\n",
        "  error: false\n",
        "  message: false\n",
        "  eval: false\n",
        "---\n",
        "\n",
        "---"
      ],
      "id": "0a7df312"
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "title: \"Preliminary Research\"\n",
        "author: \"Group 2\"\n",
        "date: June 26, 2025\n",
        "format: \n",
        "  html:\n",
        "    bibliography: references.bib\n",
        "    csl: csl/econometrica.csl\n",
        "    toc: true\n",
        "---\n",
        "\n",
        "# Problem\n",
        "What does the job market look like, and how can we refine our skills to better match the career we want?\n",
        "\n",
        "# Introduction\n",
        "\n",
        "\n",
        "To answer this question, our group began by analyzing information on how the job market has evolved over recent years. A major change that has impacted the workforce is COVID-19, which has accelerated shifts toward remote work, automation, and digital evolution. During the pandemic, organizations were forced to adapt quickly, which in turn altered the way the workplace was structured and facilitated further technological implementation. Now that it’s been a few years since the pandemic, how are the working conditions distributed within the workforce? According to [@roberthalf2024remote], 26% of U.S. workers are fully remote while 29% are hybrid. This article also highlights that altough remote has decline since the pandemic, it still very much remains as an option in the workforce. A survey was conducted an 50% of workers said they would quit if they had to return to the office full-time. Similarly, workers also mentioned that they would accept a lower salary for remote options. This demonstrates how important working conditions are for employees, therefore it should be something management considers. This article also compared job titles to flexibility of work conditions. They discovered that 31% of newly created senior-level roles were hybrid, while 15% were fully remote. By analyzing the market, we can adapt effectively and refine our strategies; therefore, we need to assess whether this element of a job posting should be something to consider.\n",
        "\n",
        "\n",
        "Artificial intelligence (AI) is a technology that allows computers and machines to mimic human abilities such as learning, understanding, solving problems, making decisions, being creative, and operating independently [@stryker2024ai]. Over the next several years, generative AI will become the main focus of AI researchers and enthusiasts. Generative AI is a type of technology that can produce original text, images, and videos. With the rising popularity of generative AI, many companies are faced with the question of how to walk the line between technological advancements and ethical responsibility. Advocates of AI claim that when implemented properly, AI can boost productivity, accelerate product development, and improve business decision-making. In 2024, the International Monetary Fund estimated that 40% of jobs around the world will be affected by AI. Tech experts hypothesize that industries and sectors such as cybersecurity, financial services, and manufacturing are likely to be affected [@expertpanel2021ai]. On the other hand, some argue that while job displacement is inevitable, AI will also create new jobs. According to Lee, Samanta, and Lee @lee2024redefining, AI will not eliminate jobs but instead will reshape career structures. Even so, there are still job types that can be at risk of being replaced. An example of a high-risk job would be one that involves repetition and predictable tasks, such as telemarketing and a customer support specialist. On the other hand, the more resilient jobs are those that require emotional intelligence or creative problem-solving. Some examples of these careers are teachers, writers, and employees with skilled trades like plumbers. Another important aspect to consider is that there will be some jobs where AI is used in conjunction with their regular responsibilities; an example of this is teachers. Teachers may use AI to grade papers, but they still will need to perform their regular tasks, like lecturing and mentoring students. Overall, Lee, Samanta, and Lee (2024) conclude that the rise of AI has a twofold effect: potential job displacement and the creation of new opportunities. \n",
        "\n",
        "\n",
        "The double-edged effect appears to be the sentiment for Ito @ito2025ai, where she looks into the impact of job postings since OpenAI’s launch in 2022. Ito mentioned that she believed it would take a couple of years to truly see the impact of AI on the job market, but when evaluating in 2025, she found that AI’s revolution may have already begun. To confirm her hypothesis, Ito asked for Revelio Labs, an analytics provider, to see whether they can find jobs where AI has already replaced them. They first began by looking at current job descriptions to see which responsibilities AI could already replace or augment. Ultimately, they found that over the past three years, there was a 19% decline in jobs involving tasks that can be performed by AI. This drop was mainly due to companies hiring fewer roles that AI can handle. They also classified the jobs online into three categories: high exposure roles, low exposure roles, and those in between. Fundamentally, jobs with the highest exposure to AI started to disappear faster from online job postings. According to Revelio Labs, the jobs with the highest exposure are the ones that manage various technical functions like IT specialists, data engineers, and database administrators. On the other hand, the jobs with the lowest exposure are in-person roles like restaurant manager or mechanic. Essentially, there is data showing that AI has already disrupted the job market, but the article also emphasizes the point that its projection is still unknown. Experts cannot determine the sustainability of replacing humans with AI, especially when it comes to the quality of service that is produced.\n",
        "\n",
        "\n",
        "From a geographic perspective, McElheran et al. @mcelheran2024ai offers important insight into how AI adoption appears to be concentrated in select cities. This academic journal examines the 2018 Annual Business Survey to not only find out geographically where the highest AI implementation is, but also which firms are leading the charge. The data used for their analysis looks at 850,000 U.S. firms from early AI adoption to now. The journal classifies AI adoption by whether a firm has used at least one AI-related technology, including: machine learning, machine vision, automated guided vehicles, natural language processing, and voice recognition. Their findings showed that San Fransico was ranked as the top adopter of AI especially when it came to larger firms. Other notable cities with a high adoption rate were Nashville, TN; San Antonio, TX; and Tampa, FL. These findings suggest that early adopters of AI are large firms or high-growth startups in regions where there is more AI exposure.\n",
        "\n",
        "\n",
        "## Purpose\n",
        "With this in mind, our research will look at the rising trends within the job market, with a particular focus on roles that align with our own career interests. This includes analyst positions, some of which may be influenced by advances in AI. We will also look at what working conditions, more specifically remote versus not remote jobs.\n",
        "\n",
        "## References\n"
      ],
      "id": "f826c4ce"
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: Market Trends\n",
        "format:\n",
        "    html:\n",
        "        code-fold: true\n",
        "        toc: true\n",
        "        toc-depth: 2\n",
        "exeucte:\n",
        "    eval: false\n",
        "    echo: false\n",
        "---\n",
        "\n",
        "# Introduction\n",
        "\n",
        "Our group has decided to evaluate the distribution of jobs related to techonology across the United States. In order to do this, we used a count of any jobs containing the word \"analyst\" and categorized them by state. The results of this are shown below."
      ],
      "id": "9e876501"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "#| fig-cap: Analyst Job Distribution Across the United States\n",
        "#| fig-align: center\n",
        "#| label: fig-analyst-distribution\n",
        "\n",
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.io as pio\n",
        "import plotly.graph_objects as go\n",
        "\n",
        "# Configure plotly for CI environments - use notebook renderer\n",
        "pio.renderers.default = \"notebook\"\n",
        "pio.templates.default = \"plotly_white\"\n",
        "\n",
        "# Additional configuration for Quarto\n",
        "import plotly.offline as pyo\n",
        "pyo.init_notebook_mode(connected=True)\n",
        "\n",
        "# Load the data\n",
        "df = pd.read_csv(\"./data/lightcast_job_postings.csv\")\n",
        "\n",
        "# Create nationwide data - filter for analyst jobs\n",
        "all_states_df = df[df['LOT_SPECIALIZED_OCCUPATION_NAME'].str.contains('analyst', case=False, na=False)]\n",
        "\n",
        "# Group by all states and count jobs\n",
        "all_state_counts = all_states_df.groupby('STATE_NAME').size().reset_index(name='job_count')\n",
        "all_state_counts_sorted = all_state_counts.sort_values(by='job_count', ascending=False)\n",
        "\n",
        "# Comprehensive state abbreviation mapping\n",
        "state_abbrev_map = {\n",
        "    'Alabama': 'AL', 'Alaska': 'AK', 'Arizona': 'AZ', 'Arkansas': 'AR', 'California': 'CA',\n",
        "    'Colorado': 'CO', 'Connecticut': 'CT', 'Delaware': 'DE', 'Florida': 'FL', 'Georgia': 'GA',\n",
        "    'Hawaii': 'HI', 'Idaho': 'ID', 'Illinois': 'IL', 'Indiana': 'IN', 'Iowa': 'IA',\n",
        "    'Kansas': 'KS', 'Kentucky': 'KY', 'Louisiana': 'LA', 'Maine': 'ME', 'Maryland': 'MD',\n",
        "    'Massachusetts': 'MA', 'Michigan': 'MI', 'Minnesota': 'MN', 'Mississippi': 'MS', 'Missouri': 'MO',\n",
        "    'Montana': 'MT', 'Nebraska': 'NE', 'Nevada': 'NV', 'New Hampshire': 'NH', 'New Jersey': 'NJ',\n",
        "    'New Mexico': 'NM', 'New York': 'NY', 'North Carolina': 'NC', 'North Dakota': 'ND', 'Ohio': 'OH',\n",
        "    'Oklahoma': 'OK', 'Oregon': 'OR', 'Pennsylvania': 'PA', 'Rhode Island': 'RI', 'South Carolina': 'SC',\n",
        "    'South Dakota': 'SD', 'Tennessee': 'TN', 'Texas': 'TX', 'Utah': 'UT', 'Vermont': 'VT',\n",
        "    'Virginia': 'VA', 'Washington': 'WA', 'West Virginia': 'WV', 'Wisconsin': 'WI', 'Wyoming': 'WY',\n",
        "    'District of Columbia': 'DC'\n",
        "}\n",
        "\n",
        "# Add state abbreviations to the data\n",
        "all_state_counts_sorted['state_abbrev'] = all_state_counts_sorted['STATE_NAME'].map(state_abbrev_map)\n",
        "\n",
        "# Filter out any states that couldn't be mapped (in case of data issues)\n",
        "mapped_states = all_state_counts_sorted.dropna(subset=['state_abbrev'])\n",
        "\n",
        "# Create a choropleth map showing job counts for all states\n",
        "fig = px.choropleth(\n",
        "    mapped_states,\n",
        "    locations='state_abbrev',\n",
        "    color='job_count',\n",
        "    locationmode='USA-states',\n",
        "    color_continuous_scale=[[0, '#f0f9f9'], [0.2, '#cceeee'], [0.4, '#7dd3c0'], [0.6, '#42b883'], [0.8, '#2c8577'], [1, '#1a5d56']],\n",
        "    labels={'job_count': 'Number of Jobs', 'STATE_NAME': 'State'},\n",
        "    hover_name='STATE_NAME',\n",
        "    hover_data={'state_abbrev': False, 'job_count': True},\n",
        "    range_color=[0, mapped_states['job_count'].max()]\n",
        ")\n",
        "\n",
        "# Update layout with no title to maximize map space\n",
        "fig.update_layout(\n",
        "    geo_scope='usa',\n",
        "    width=750,\n",
        "    height=400,\n",
        "    margin=dict(t=0, b=0, l=0, r=0),\n",
        "    geo=dict(\n",
        "        projection_type='albers usa',\n",
        "        showlakes=True,\n",
        "        domain=dict(x=[0, 0.95], y=[0, 1]),\n",
        "        lakecolor='rgb(255, 255, 255)',\n",
        "        bgcolor='rgba(0,0,0,0)'\n",
        "    ),\n",
        "    coloraxis_colorbar=dict(\n",
        "        len=0.9,  # Make colorbar same height as the plot\n",
        "        thickness=20,  # Width of the colorbar\n",
        "        x=0.96,  # Position from left edge\n",
        "        y=0.5,   # Center vertically\n",
        "        yanchor='middle'\n",
        "    )\n",
        ")\n",
        "\n",
        "# Show the interactive map\n",
        "fig.write_html(\"./figures/analyst_job_distribution.html\", include_plotlyjs='cdn')"
      ],
      "id": "fig-analyst-distribution",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "```{=html}\n",
        "<iframe width=\"1000\" height=\"700\" src=\"./figures/analyst_job_distribution.html\" title=\"Analyst Distribution\"></iframe>\n",
        "```\n",
        "\n",
        "According to the visual above, Texas and California are the two clear leaders in the total amount of jobs being offered that contain the word \"analyst\" in the title. Additionally, eastern states show a considerably greater amount of these jobs compared to western states.\n"
      ],
      "id": "b89edff8"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "\n",
        "import findspark\n",
        "findspark.init()\n",
        "\n",
        "from pyspark.sql import SparkSession\n",
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.io as pio\n",
        "import numpy as np\n",
        "\n",
        "np.random.seed(423548)\n",
        "\n",
        "pio.renderers.default = \"notebook\"\n",
        "\n",
        "# Initialize Spark Session\n",
        "spark = SparkSession.builder.appName(\"LightcastData\").getOrCreate()\n",
        "\n",
        "# Load Data\n",
        "df = spark.read.option(\"header\", \"true\").option(\"inferSchema\", \"true\").option(\"multiLine\",\"true\").option(\"escape\", \"\\\"\").csv(\"./data/lightcast_job_postings.csv\")\n",
        "\n",
        "\n",
        "df.printSchema() # comment this line when rendering the submission\n",
        "df.show(5)"
      ],
      "id": "d91c1ce1",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "\n",
        "# clean the data\n",
        "\n",
        "from pyspark.ml.feature import StringIndexer, OneHotEncoder, VectorAssembler\n",
        "from pyspark.ml import Pipeline\n",
        "from pyspark.sql.functions import when, col\n",
        "\n",
        "df= df.drop(\"ID\" ,\"LAST_UPDATED_DATE\",\"LAST_UPDATED_TIMESTAMP\",\"DUPLICATES\", \"EXPIRED\",\"SOURCE_TYPES\",\"SOURCES\",\n",
        "            \"URL\", \"ACTIVE_URLS\", \"ACTIVE_SOURCES_INFO\",\"TITLE_RAW\",\"BODY\", \"MODELED_EXPIRED\", \"MODELED_DURATION\", \"COMPANY\", \n",
        "            \"COMPANY_NAME\", \"COMPANY_RAW\", \"COMPANY_IS_STAFFING\", \"EDUCATION_LEVELS\")\n",
        "\n",
        "df = df.withColumn(\"REMOTE_TYPE_NAME\", \n",
        "                   when(col(\"REMOTE_TYPE_NAME\") == \"[None]\", \"Not Remote\")\n",
        "                   .otherwise(col(\"REMOTE_TYPE_NAME\")))\n",
        "\n",
        "df_clean = df.na.drop(subset=[\n",
        "    \"salary\", \"MIN_YEARS_EXPERIENCE\", \"MAX_YEARS_EXPERIENCE\",\n",
        "    \"EDUCATION_LEVELS_NAME\", \"EMPLOYMENT_TYPE_NAME\", \"REMOTE_TYPE_NAME\",\n",
        "    \"DURATION\",\n",
        "])\n",
        "\n",
        "df_clean.show(5)"
      ],
      "id": "e8b56c37",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "# titles = df_clean.select(\"TITLE_NAME\").distinct().rdd.flatMap(lambda x: x).collect()\n",
        "# for title in titles:\n",
        "#     print(title)"
      ],
      "id": "18c5a9f8",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "\n",
        "#gave chatgpt the list and told it to split into ai impacted and not\n",
        "ai_impacted_jobs = [\n",
        "    'Trust Officers',\n",
        "    'Cloud Migration Engineers',\n",
        "    'EDI Developers',\n",
        "    'Permit Specialists',\n",
        "    'Data Integration Leads',\n",
        "    'Blockchain Developers',\n",
        "    'Lead Intelligence Analysts',\n",
        "    'Sales Architects',\n",
        "    'Business Intelligence Leads',\n",
        "    'Data Analyst Managers',\n",
        "    'Project Support Analysts',\n",
        "    'Sales Planning Analysts',\n",
        "    'Hourly Managers',\n",
        "    'Industrial Equipment Mechanics',\n",
        "    'Value Engineers',\n",
        "    'Enterprise Applications Consultants',\n",
        "    'SAP FICO Consultants',\n",
        "    'SAP ABAP Consultants',\n",
        "    'Oracle Erp Consultants',\n",
        "    'Member Liaisons',\n",
        "    'Data Solutions Analysts',\n",
        "    'Transformation Analysts',\n",
        "    'GIS Data Analysts',\n",
        "    'Japanese Bilingual Administrative Assistants',\n",
        "    'Project Leads',\n",
        "    'People Analytics Analysts',\n",
        "    'Human Resources Reporting Analysts',\n",
        "    'Implementation Consultants',\n",
        "    'Lead Enterprise Architects',\n",
        "    'Branch Bankers',\n",
        "    'Growth Marketing Analysts',\n",
        "    'Chargeback Analysts',\n",
        "    'Strategy Leads',\n",
        "    'Innovation Analysts',\n",
        "    'Business Insights Managers',\n",
        "    'CRM Business Analysts',\n",
        "    'Localization Producers',\n",
        "    'EDI Analysts',\n",
        "    'Scientific Data Analysts',\n",
        "    'Bilingual Japanese Customer Service Representatives',\n",
        "    'SQL/ETL Developers',\n",
        "    'Data Quality Leads',\n",
        "    'Data Visualization Analysts',\n",
        "    'Data Analytics Engineers',\n",
        "    'Foundation Administrators',\n",
        "    'SQL Reporting Analysts',\n",
        "    'Procurement Analysts',\n",
        "    'Manual Testers',\n",
        "    'Analytics Associates',\n",
        "    'Supply Chain Architects',\n",
        "    'SAP SD Analysts',\n",
        "    'Oracle Cloud Financials Consultants',\n",
        "    'Data Quality Assurance Analysts',\n",
        "    'Client Finance Directors',\n",
        "    'Population Health Analysts',\n",
        "    'Enterprise Solutions Consultants',\n",
        "    'Digital Product Analysts',\n",
        "    'Line Pilots',\n",
        "    'Processing Clerks',\n",
        "    'Client Solutions Strategists',\n",
        "    'Business Intelligence Specialists',\n",
        "    'Accounting Consultants',\n",
        "    'Business Intelligence Analysts',\n",
        "    'SAP CRM Consultants',\n",
        "    'Human Capital Management Consultants',\n",
        "    'IAM Architects',\n",
        "    'SAP Ariba Consultants',\n",
        "    'Territory Assistants',\n",
        "    'Immigration Analysts',\n",
        "    'Customer Experience Associates',\n",
        "    'Global Analysts',\n",
        "    'Analysts',\n",
        "    'Document Management Clerks',\n",
        "    'Data Reporting Analysts',\n",
        "    'Quality Analysts',\n",
        "    'SAP HANA Consultants',\n",
        "    'Site Analysts',\n",
        "    'Business Architects',\n",
        "    'Data Analytics Developers',\n",
        "    'Digital Solution Architect Managers',\n",
        "    'Information Governance Analysts',\n",
        "    'Business Coaches',\n",
        "    'Configuration Management Analysts',\n",
        "    'Commercial Analysts',\n",
        "    'Analytics Consultants',\n",
        "    'Buyers',\n",
        "    'Enterprise Solutions Architects',\n",
        "    'Remediation Analysts',\n",
        "    'Search Planners',\n",
        "    'Insurance Associates',\n",
        "    'People Operations Generalists',\n",
        "    'Appeals Specialists',\n",
        "    'IT Project Assistants',\n",
        "    'Data Analytics Architects',\n",
        "    'Methods Analysts',\n",
        "    'Liquidity Analysts',\n",
        "    'Functional Consultants',\n",
        "    'SAP HR Consultants',\n",
        "    'Performance Directors',\n",
        "    'ERP Implementation Specialists',\n",
        "    'Tribal Administrators',\n",
        "    'Study Design Leads',\n",
        "    'Equipment Analysts',\n",
        "    'Quality Assurance Monitors',\n",
        "    'Integration Team Leads',\n",
        "    'Invoice Analysts',\n",
        "    'SAP FICO Functional Consultants',\n",
        "    'Enterprise Relationship Managers',\n",
        "    'Enterprise Data Architects',\n",
        "    'SAP PP/QM Consultants',\n",
        "    'Management Analysts',\n",
        "    'Speech Assistants',\n",
        "    'SAP Business Analysts',\n",
        "    'Data Migration Analysts',\n",
        "    'SAP Techno Functional Consultants',\n",
        "    'SAP Supply Chain Consultants',\n",
        "    'Enterprise Directors',\n",
        "    'Data Processing Analysts',\n",
        "    'SAS Data Analysts',\n",
        "    'Manufacturing Consultants',\n",
        "    'Demand Analysts',\n",
        "    'Netsuite Principal Consultants',\n",
        "    'OTM Consultants',\n",
        "    'Modernization Superintendents',\n",
        "    'Mapping Analysts',\n",
        "    'Enterprise Systems Architects',\n",
        "    'Business Intelligence Associates',\n",
        "    'Oracle Business Analysts',\n",
        "    'SAP Support Analysts',\n",
        "    'Automation Engineers',\n",
        "    'Excel VBA Developers',\n",
        "    'Financial Data Analysts',\n",
        "    'Power Analysts',\n",
        "    'Sales Analysts',\n",
        "    'Lead IT Analysts',\n",
        "    'Development Analysts',\n",
        "    'Analytics Managers',\n",
        "    'Financial Applications Specialists',\n",
        "    'Sales Solution Architects',\n",
        "    'Survey Analysts',\n",
        "    'Data Analysts/Data Scientists',\n",
        "    'Quality Control Reviewers',\n",
        "    'Oracle EBS Consultants',\n",
        "    'Data Services Analysts',\n",
        "    'ERP Implementation Managers',\n",
        "    'Knowledge Analysts',\n",
        "    'Enterprise Business Analysts',\n",
        "    'Test Data Analysts',\n",
        "    'Techno Functional Analysts',\n",
        "    'Netsuite Consultants',\n",
        "    'Cryptologists',\n",
        "    'PMO Analysts',\n",
        "    'Reference Data Analysts',\n",
        "    'Clinical Data Analysts',\n",
        "    'Enterprise Business Architects',\n",
        "    'Enterprise Cloud Architects',\n",
        "    'SAP Security Consultants',\n",
        "    'Data Leads',\n",
        "    'Tools Developers',\n",
        "    'Marketing Analysts',\n",
        "    'Financial Planning and Analysis Analysts',\n",
        "    'Finance Systems Analysts',\n",
        "    'Production Operators',\n",
        "    'Oracle Functional Analysts',\n",
        "    'IT Buyers',\n",
        "    'Process Engineers',\n",
        "    'Privacy Analysts',\n",
        "    'Enterprise Resources Planning Managers',\n",
        "    'Real Estate Analysts',\n",
        "    'Systems Integration Architects',\n",
        "    'End User Computing Analysts',\n",
        "    'Data Analysts/Developers',\n",
        "    'Publishing Specialists',\n",
        "    'SQL Analysts',\n",
        "    'Account Analysts',\n",
        "    'Engineering Data Analysts',\n",
        "    'Oracle EBS Business Analysts',\n",
        "    'Directors of Business Intelligence',\n",
        "    'Reporting Associates',\n",
        "    'SAP HCM Consultants',\n",
        "    'Feasibility Managers',\n",
        "    'Data Management Administrators',\n",
        "    'Walkers',\n",
        "    'Production Analysts',\n",
        "    'HRIS Associates',\n",
        "    'Data Analytics Leads',\n",
        "    'Data Analytics Specialists',\n",
        "    'Data Security Analysts',\n",
        "    'Principal Data Scientists',\n",
        "    'Researchers',\n",
        "    'Procurement Business Analysts',\n",
        "    'Oracle Applications Analysts',\n",
        "    'Forecast Analysts',\n",
        "    'Supply Chain Data Analysts',\n",
        "    'Analytics and Insights Managers',\n",
        "    'MDM Developers',\n",
        "    'Business Support Analysts',\n",
        "    'Food and Beverage Analysts',\n",
        "    'Intelligence Research Analysts',\n",
        "    'Validation Leads',\n",
        "    'Associate Business Managers',\n",
        "    'Enterprise Data Analysts',\n",
        "    'IT Governance Analysts',\n",
        "    'Domain Architects',\n",
        "    'Compliance Business Analysts',\n",
        "    'Implementation Specialists',\n",
        "    'Placement Managers',\n",
        "    'Corporate Architects',\n",
        "    'Splunk Developers',\n",
        "    'Work Force Management Analysts',\n",
        "    'Banking Consultants',\n",
        "    'Data Stewards',\n",
        "    'SAP MDM Consultants',\n",
        "    'SAP Specialists',\n",
        "    'Data Validation Analysts',\n",
        "    'Business Intelligence Data Warehouse Architects',\n",
        "    'Data Science Associates',\n",
        "    'Solution Leads',\n",
        "    'SAP Data Analysts',\n",
        "    'SAP Finance Consultants',\n",
        "    'Doctors',\n",
        "    'SQL Data Analysts',\n",
        "    'Patient Revenue Cycle Specialists',\n",
        "    'People Analytics Managers',\n",
        "    'Data Scientists',\n",
        "    'Digital Data Analysts',\n",
        "    'Data Control Clerks',\n",
        "    'Storeroom Clerks',\n",
        "    'Finance Business Analysts',\n",
        "    'SAP HR Analysts',\n",
        "    'Business Intelligence and Analytics Managers',\n",
        "    'Brand Activation Managers',\n",
        "    'Enterprise Project Managers',\n",
        "    'Data Analytics Consultants',\n",
        "    'Programmer Analysts',\n",
        "    'Sales Data Analysts',\n",
        "    'Data Reviewers',\n",
        "    'Contract Analysts',\n",
        "    'Decision Support Analysts',\n",
        "    'Data Associates',\n",
        "    'E-Commerce Architects',\n",
        "    'Risk Control Managers',\n",
        "    'Debt Specialists',\n",
        "    'Risk and Controls Managers',\n",
        "    'Data Entry Analysts',\n",
        "    'Platform Analysts',\n",
        "    'Financial Systems Analysts',\n",
        "    'Claims Resolution Analysts',\n",
        "    'Lead Business Intelligence Analysts',\n",
        "    'Inside Auto Claims Representatives',\n",
        "    'Customer Contact Center Managers',\n",
        "    'Data Governance Analysts',\n",
        "    'Business Operations Specialists',\n",
        "    'SAP Technical Consultants',\n",
        "    'Data Engineering Managers',\n",
        "    'SAP EWM Consultants',\n",
        "    'Tax Controllers',\n",
        "    'Transmission Analysts',\n",
        "    'Business Analysts',\n",
        "    'Credit Analysts',\n",
        "    'CSV Consultants',\n",
        "    'Patient Services Associates',\n",
        "    'Research Data Analysts',\n",
        "    'Medical Economics Analysts',\n",
        "    'SQL Administrators',\n",
        "    'SAP Master Data Analysts',\n",
        "    'Customer Care Analysts',\n",
        "    'Title Processors',\n",
        "    'Power Business Intelligence Developers',\n",
        "    'Data Quality Analysts',\n",
        "    'Quality Assurance Analysts',\n",
        "    'Consulting Engagement Managers',\n",
        "    'Vice Presidents of Operational Excellence',\n",
        "    'Insights Analysts',\n",
        "    'Inventory Analysts',\n",
        "    'Data Support Analysts',\n",
        "    'SAP Business One Consultants',\n",
        "    'Data Management Leads',\n",
        "    'Platform Administrators',\n",
        "    'Oracle Financial Functional Consultants',\n",
        "    'Architecture Managers',\n",
        "    'ERP Analysts',\n",
        "    'Growth Associates',\n",
        "    'Directors of School Nutrition',\n",
        "    'Operations and Policy Analysts',\n",
        "    'Lead Data Analysts',\n",
        "    'SAP SD Functional Consultants',\n",
        "    'Assistant Federal Security Directors',\n",
        "    'Oracle Cloud Architects',\n",
        "    'Quality Assurance Leads',\n",
        "    'SAP FICO Analysts',\n",
        "    'Repair Analysts',\n",
        "    'SAP SD Consultants',\n",
        "    'SAP SRM Consultants',\n",
        "    'Hyperion Consultants',\n",
        "    'SAP Systems Analysts',\n",
        "    'Adobe Experience Manager Architects',\n",
        "    'Quality Assurance Analysts/Engineers',\n",
        "    'Oracle Utilities Professional Services CC&B Implementation Consultants',\n",
        "    'SAP OTC Consultants',\n",
        "    'Data Warehouse Business Analysts',\n",
        "    'Client Data Analysts',\n",
        "    'Documentum Administrators',\n",
        "    'Project Analysts',\n",
        "    'Korean Linguists',\n",
        "    'Data Governance Managers',\n",
        "    'Oracle Consultants',\n",
        "    'Navigators',\n",
        "    'Customer Data Analysts',\n",
        "    'Enterprise Technical Architects',\n",
        "    'Cash Management Associates',\n",
        "    'Equity Traders',\n",
        "    'Financial Analysts',\n",
        "    'ERP Architects',\n",
        "    'Business Intelligence and Data Analysts',\n",
        "    'Automation Consultants',\n",
        "    'Governance Analysts',\n",
        "    'ERP Systems Analysts',\n",
        "    'Commercial Banking Credit Analysts',\n",
        "    'Certified Public Accountants',\n",
        "    'Data Operations Analysts',\n",
        "    'Category Analysts',\n",
        "    'Regional Business Managers',\n",
        "    'GCP Auditors',\n",
        "    'Architectural Project Coordinators',\n",
        "    'Delivery Analysts',\n",
        "    'SAP MM Functional Consultants',\n",
        "    'Techno Functional Leads',\n",
        "    'Clinical Data Managers',\n",
        "    'Administrators',\n",
        "    'Enterprise Network Managers',\n",
        "    'Healthcare Business Analysts',\n",
        "    'Solutions Architects',\n",
        "    'Ward Clerks',\n",
        "    'Account Coordinators',\n",
        "    'Data Abstractors',\n",
        "    'Data Scientists/Analysts',\n",
        "    'SAP Functional Consultants',\n",
        "    'Product Lifecycle Managers',\n",
        "    'Data Intelligence Analysts',\n",
        "    'Data Warehouse Analysts',\n",
        "    'CNC Administrators',\n",
        "    'Life Sciences Consultants',\n",
        "    'Data Processing Clerks',\n",
        "    'Production Planning Analysts',\n",
        "    'Business Growth Consultants',\n",
        "    'Chief Architects',\n",
        "    'Logistics Administrators',\n",
        "    'Vendor Analysts',\n",
        "    'Quantitative Analytics Managers',\n",
        "    'Treasury Consultants',\n",
        "    'Crime Analysts',\n",
        "    'SAP Business Process Analysts',\n",
        "    'Call Center Analysts',\n",
        "    'GRC Analysts',\n",
        "    'Competitive Intelligence Analysts',\n",
        "    'Oracle Technical Consultants',\n",
        "    'Headend Engineers',\n",
        "    'Claims Business Analysts',\n",
        "    'General Managers',\n",
        "    'Systems Architecture Engineers',\n",
        "    'SAP Ariba Managers',\n",
        "    'Customer Analytics Managers',\n",
        "    'Customer Experience Analysts',\n",
        "    'LIS Analysts',\n",
        "    'SAP Consultants',\n",
        "    'SAP Hybris Consultants',\n",
        "    'SAP PI Consultants',\n",
        "    'Enterprise Application Analysts',\n",
        "    'Data and Analytics Consultants',\n",
        "    'Agile Product Owners',\n",
        "    'Business Intelligence Reporting Analysts',\n",
        "    'Management Associates',\n",
        "    'Health Data Analysts',\n",
        "    'Enterprise Systems Engineers',\n",
        "    'Lead Analysts',\n",
        "    'Data Migration Consultants',\n",
        "    'Professors of Biological Sciences',\n",
        "    'Oracle Business Systems Analysts',\n",
        "    'Regional Fleet Managers',\n",
        "    'Enterprise Systems Analysts',\n",
        "    'Inflight Supervisors',\n",
        "    'Operations Process Engineers',\n",
        "    'SAP Developers',\n",
        "    'Customer Care Experts',\n",
        "    'Reporting Analysts',\n",
        "    'Commercial Excellence Managers',\n",
        "    'Lead Quality Analysts',\n",
        "    'Oracle EBS Technical Consultants',\n",
        "    'Records Assistants',\n",
        "    'Directors of Cloud Security',\n",
        "    '.NET Technical Architects',\n",
        "    'Associates',\n",
        "    'Trend Analysts',\n",
        "    'Digital Analysts',\n",
        "    'Innovation Specialists',\n",
        "    'Data Governance Leads',\n",
        "    'Data Analysts',\n",
        "    'Directors of Sponsored Programs',\n",
        "    'Enterprise Resource Planning Managers',\n",
        "    'Wealth Management Analysts',\n",
        "    'Quantitative Data Analysts',\n",
        "    'Origination Associates',\n",
        "    'Enterprise Business Consultants',\n",
        "    'SAP Application Consultants',\n",
        "    'Information Analysts',\n",
        "    'Process Improvement Analysts',\n",
        "    'Consumer Analysts',\n",
        "    'Communications Analysts',\n",
        "    'GIS Consultants',\n",
        "    'Data Analyst Specialists',\n",
        "    'Plant Maintenance Managers',\n",
        "    'Netsuite Functional Consultants',\n",
        "    'Plant Chemists',\n",
        "    'Integration Consultants',\n",
        "    'Data Management Analysts',\n",
        "    'Oracle Financial Consultants',\n",
        "    'SAP Plant Maintenance Consultants',\n",
        "    'Analytics Leads',\n",
        "    'Lead Level Designers',\n",
        "    'Solutions Analysts',\n",
        "    'Data and Reporting Analysts',\n",
        "    'Data Analytics Product Managers',\n",
        "    'SAP Analysts',\n",
        "    'Implementation Analysts',\n",
        "    'Revenue Cycle Analysts',\n",
        "    'Case Management Associates',\n",
        "    'SAP Successfactors Consultants',\n",
        "    'IT Governance Managers',\n",
        "    'Sales Professionals',\n",
        "    'Principal Architects',\n",
        "    'Oracle HCM Consultants',\n",
        "    'Data Science Analysts',\n",
        "    'HANA Consultants',\n",
        "    'OSP Managers',\n",
        "    'Interface Analysts',\n",
        "    'Transportation Systems Analysts',\n",
        "    'Forms Analysts',\n",
        "    'Master Data Coordinators',\n",
        "    'Enterprise Application Architects',\n",
        "    'Epic Security Analysts',\n",
        "    'Intercompany Accountants',\n",
        "    'Client Insights Analysts',\n",
        "    'Data Analytics Associates',\n",
        "    'SAP SD/MM Consultants',\n",
        "    'SAP Administrators',\n",
        "    'Supply Chain Business Managers',\n",
        "    'Assistant Service Experience Managers',\n",
        "    'Data Clerks',\n",
        "    'Data Visualization Specialists',\n",
        "    'Growth Specialists',\n",
        "    'SAP Basis Leads',\n",
        "    'Functional Analysts',\n",
        "    'SAP Functional Analysts',\n",
        "    'Knowledge Experts',\n",
        "    'Artificial Intelligence Engineers',\n",
        "    'Financial Planning and Analysis Managers',\n",
        "    'Business Intelligence Data Analysts',\n",
        "    'Peoplesoft Business Analysts',\n",
        "    'Platform Architects',\n",
        "    'Systems Architects',\n",
        "    'Assessment Analysts',\n",
        "    'Solutions Consultants',\n",
        "    'Surface Designers',\n",
        "    'SAP GTS Consultants',\n",
        "    'Data Insights Analysts',\n",
        "    'Oracle Cloud Technical Consultants',\n",
        "    'Data Modelers',\n",
        "    'Distribution Consultants',\n",
        "    'ERP Administrators',\n",
        "    'SAP MM Consultants',\n",
        "    'ERP Consultants',\n",
        "    'Financial Planning Analysts',\n",
        "    'Intelligence Analysts',\n",
        "    'SAP Basis Consultants',\n",
        "    'Consulting Technical Managers',\n",
        "    'Insights and Reporting Analysts',\n",
        "    'Advanced Analytics Analysts',\n",
        "    'Medical Data Analysts',\n",
        "    'Solution Architects/Principal Consultants',\n",
        "    'Technical Architects',\n",
        "    'Data and Analytics Managers',\n",
        "    'Travel and Expense Analysts',\n",
        "    'OFSAA Business Analysts',\n",
        "    'Facilities HVAC Technicians',\n",
        "    'Data Analytics Analysts',\n",
        "    'Web Data Analysts',\n",
        "    'Staff Data Engineers',\n",
        "    'Program Data Analysts',\n",
        "    'Associate Consultants',\n",
        "    'Safety Data Analysts',\n",
        "    'Controllers',\n",
        "    'CAD Operators',\n",
        "    'Security Analysts',\n",
        "    'Oracle Finance Functional Consultants',\n",
        "    'Enterprise Architects',\n",
        "    'Finance Data Analysts',\n",
        "    'ERP Business Systems Analysts',\n",
        "    'IT Data Analysts',\n",
        "    'Business Analysis Interns',\n",
        "    'Information Services Analysts',\n",
        "    'Data Solutions Consultants',\n",
        "    'Enterprise Program Managers',\n",
        "    'SAP MM Analysts',\n",
        "    'IT Applications Specialists',\n",
        "    'Oracle EBS Functional Consultants',\n",
        "    'Research and Evaluation Analysts',\n",
        "    'Customer Support Leads',\n",
        "    'Oracle SCM Functional Consultants',\n",
        "    'IT Data Analytics Analysts',\n",
        "    'Finance Assistants',\n",
        "    'Business Operations Associates',\n",
        "    'Quality Assurance Automation Testers',\n",
        "    'Technical Project Managers',\n",
        "    'Data Science and Analytics Managers',\n",
        "    'Oracle Cloud HCM Consultants',\n",
        "    'Business Intelligence Managers',\n",
        "    'Customer Support Administrators',\n",
        "    'Procurement Operations Associates',\n",
        "    'Analytics and Reporting Analysts',\n",
        "    'Research Specialists',\n",
        "    'BSA Consultants',\n",
        "    'Oracle Systems Analysts',\n",
        "    'Bilingual Office Managers',\n",
        "    'Institutional Sales Analysts',\n",
        "    'Consulting Solutions Architects',\n",
        "    'Corporate Finance Associates',\n",
        "    'Immunology Specialists',\n",
        "    'Global Trade Analysts',\n",
        "    'Search Coordinators',\n",
        "    'Higher Education Consultants',\n",
        "    'Enterprise Risk Analysts',\n",
        "    'ERP Support Specialists',\n",
        "    'Spanish and English Teachers',\n",
        "    'Assistant Vice Presidents',\n",
        "    'Data Protection Specialists',\n",
        "    'Manufacturing Services Managers',\n",
        "    'Cash Managers',\n",
        "    'Pricing Data Analysts',\n",
        "    'Directors of Toxicology',\n",
        "    'Data Acquisition Analysts',\n",
        "    'Process Analysts',\n",
        "    'Data Technicians',\n",
        "    'Clinical Quality Analysts',\n",
        "    'ERP Specialists',\n",
        "    'IAM Analysts',\n",
        "    'Data Infrastructure Engineers',\n",
        "    'Industry Analysts',\n",
        "    'Oracle Database Developers',\n",
        "    'Platform Support Specialists',\n",
        "    'School Education Managers',\n",
        "    'Clinical Data Associates',\n",
        "    'Oracle Functional Consultants',\n",
        "    'Enterprise Analysts',\n",
        "    'Manufacturing Analysts',\n",
        "    'Targeting Analysts',\n",
        "    'Master Data Analysts',\n",
        "    'SAP Basis Administrators',\n",
        "    'Data Center Analysts',\n",
        "    'Business Assistants',\n",
        "    'Philanthropy Assistants',\n",
        "    'IT Analysts',\n",
        "    'Middle Office Analysts',\n",
        "    'Investment Data Analysts',\n",
        "    'Salesforce Consultants'\n",
        "]"
      ],
      "id": "408d5d07",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "from pyspark.sql.functions import when, col, lit, avg, count\n",
        "\n",
        "df_final = df_clean.withColumn(\n",
        "    'ai_impacted',\n",
        "    when(col('title_name').isin(ai_impacted_jobs), lit('yes')).otherwise(lit('no'))\n",
        ")\n",
        "\n",
        "avg_salary = df_final.groupBy(\"state_name\").agg(avg(\"salary\").alias(\"avg_salary\"))\n",
        "\n",
        "\n",
        "df_final = df_final.join(avg_salary, on=\"state_name\", how=\"left\")\n",
        "\n",
        "count = df_final.groupBy(\"state_name\").agg(count(\"*\").alias(\"count\"))\n",
        "\n",
        "\n",
        "df_final = df_final.join(count, on=\"state_name\", how=\"left\")\n",
        "\n",
        "df_final.select(\"count\").distinct().show()\n",
        "\n",
        "df_final_pd = df_final.toPandas()"
      ],
      "id": "4c2c1bec",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| eval: false\n",
        "#| warning: false\n",
        "#| fig-align: center\n",
        "\n",
        "import plotly.express as px\n",
        "\n",
        "fig_plot = px.scatter(\n",
        "    df_final_pd,  \n",
        "    x=\"STATE_NAME\",                       \n",
        "    y=\"avg_salary\",                 \n",
        "    size=\"count\",                 \n",
        "    color=\"ai_impacted\",                  \n",
        "    title=\"Average Salary by State and AI Impact\",\n",
        "    size_max=60,\n",
        "    color_discrete_map={\n",
        "        \"yes\": \"#072418\",   \n",
        "        \"no\": \"#d8f5eb\"  \n",
        "    }\n",
        "\n",
        ")\n",
        "\n",
        "fig_plot.update_layout(\n",
        "    legend_title_text=\"AI Impacted\",\n",
        "    xaxis_title=\"State\",\n",
        "    yaxis_title=\"Average Salary\",\n",
        "    xaxis=dict(tickangle=45),\n",
        "    yaxis=dict(categoryorder='category descending')\n",
        ")\n",
        "\n",
        "\n",
        "\n",
        "fig_plot.write_html(\"./figures/Avg_salary.html\", include_plotlyjs='cdn')"
      ],
      "id": "f7eb72bc",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "```{=html}\n",
        "<iframe width=\"1000\" height=\"700\" src=\"./figures/Avg_salary.html\" title=\"AI vs Non-AI\"></iframe>\n",
        "```\n",
        "The chart above displays the salary breakdown between states for job postings impacted and not impacted by AI. The size of the data points illustrates the number of job postings that each state has. Interestingly, both Texas and California have the largest amount of job postings not affected by AI. We can conclude that a possiblity for this is that in those tech hubs, the jobs AI can replace decreased in demand.\n",
        "\n",
        "\n",
        "<div style=\"text-align: center; font-size: 18px; font-weight: bold; margin: 20px 0;\">\n",
        "Analyst Job Distribution Across Cities in the United States\n",
        "</div>"
      ],
      "id": "a055adf4"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| eval: false\n",
        "#| warning: false\n",
        "#| fig-cap: Analyst Job Distribution Across Cities in the United States\n",
        "#| fig-align: center\n",
        "#| label: fig-job-distribution-cities\n",
        "\n",
        "# Filter for analyst jobs from all states (not just the selected 5)\n",
        "all_states_analyst_df = df[df['LOT_SPECIALIZED_OCCUPATION_NAME'].str.contains('analyst', case=False, na=False)]\n",
        "\n",
        "# Group by CITY_NAME and count jobs for analysts\n",
        "city_counts_jobs = all_states_analyst_df.groupby('CITY_NAME').size().reset_index(name='job_count')\n",
        "\n",
        "# Sort city_counts_jobs from greatest to least by job_count and get top 10\n",
        "city_counts_jobs_sorted = city_counts_jobs.sort_values(by='job_count', ascending=False).head(10)\n",
        "\n",
        "# Create discrete colors for each bar\n",
        "colors = ['#1a5d56', '#2c8577', '#42b883', '#42b883', '#7dd3c0', '#7dd3c0', '#a8e6cf', '#cceeee', '#f0f9f9', '#f0f9f9']\n",
        "\n",
        "# Create bar chart using plotly with discrete colors\n",
        "fig_cities = go.Figure(data=[\n",
        "    go.Bar(\n",
        "        x=city_counts_jobs_sorted['CITY_NAME'],\n",
        "        y=city_counts_jobs_sorted['job_count'],\n",
        "        text=city_counts_jobs_sorted['job_count'],\n",
        "        textposition='outside',\n",
        "        marker_color=colors[:len(city_counts_jobs_sorted)]\n",
        "    )\n",
        "])\n",
        "\n",
        "# Update layout and styling\n",
        "fig_cities.update_layout(\n",
        "    title='',\n",
        "    xaxis_title='City',\n",
        "    yaxis_title='Number of Jobs',\n",
        "    width=750,\n",
        "    height=400,\n",
        "    margin=dict(t=20, b=80, l=50, r=50),\n",
        "    showlegend=False,\n",
        "    xaxis=dict(tickangle=45),\n",
        "    template='plotly_white'\n",
        ")\n",
        "\n",
        "# Show the interactive chart\n",
        "fig_cities.write_html(\"./figures/job_distribution_cities.html\", include_plotlyjs='cdn')"
      ],
      "id": "fig-job-distribution-cities",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "```{=html}\n",
        "<iframe width=\"1000\" height=\"700\" src=\"./figures/job_distribution_cities.html\" title=\"Analyst Distribution\"></iframe>\n",
        "```\n",
        "New York City is the clear leader in analyst jobs available. Another insight is that Texas has 3 cities in the top 10, which indicates a strong job market. Something that surprised us, is that San Francisco finishes lower than expected by rounding out the bottom of the top 10.\n"
      ],
      "id": "ec747de6"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "#| eval: false\n",
        "#| output: false\n",
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "\n",
        "# Load the data\n",
        "df = pd.read_csv(\"./data/lightcast_job_postings.csv\")\n",
        "\n",
        "analyst_df = df[df['LOT_SPECIALIZED_OCCUPATION_NAME'].str.contains('analyst', case=False, na=False)]\n",
        "analyst_salary_df = analyst_df[analyst_df['SALARY'].notna()]\n",
        "\n",
        "print(f\"Total analyst jobs: {len(analyst_df)}\")\n",
        "print(f\"Analyst jobs with salary data: {len(analyst_salary_df)}\")\n",
        "\n",
        "# Group by state and calculate metrics\n",
        "bubble_data = analyst_salary_df.groupby('STATE_NAME').agg({\n",
        "    'SALARY': 'mean',  # Average salary for bubble size\n",
        "    'STATE_NAME': 'count'  # Count of jobs for y-axis\n",
        "}).rename(columns={'STATE_NAME': 'job_count'})\n",
        "\n",
        "bubble_data = bubble_data.reset_index()\n",
        "\n",
        "print(f\"\\nStates with analyst salary data: {len(bubble_data)}\")\n",
        "print(\"\\nTop 10 states by job count:\")\n",
        "print(bubble_data.sort_values('job_count', ascending=False).head(10))\n",
        "\n",
        "# Filter to top 10 states by job count\n",
        "top_10_states = bubble_data.sort_values('job_count', ascending=False).head(10)\n",
        "\n",
        "# Create the bubble chart\n",
        "fig = px.scatter(\n",
        "    top_10_states,\n",
        "    x='STATE_NAME',\n",
        "    y='job_count',\n",
        "    size='SALARY',\n",
        "    color='SALARY',\n",
        "    hover_name='STATE_NAME',\n",
        "    hover_data={\n",
        "        'SALARY': ':,.0f',\n",
        "        'job_count': True,\n",
        "        'STATE_NAME': False\n",
        "    },\n",
        "    labels={\n",
        "        'SALARY': 'Average Salary ($)',\n",
        "        'STATE_NAME': 'State',\n",
        "        'job_count': 'Number of Jobs (Excludes Null Salaries)'\n",
        "    },\n",
        "    title='Top 10 States for Analyst Jobs (Bubble Size = Salary)',\n",
        "    color_continuous_scale='Greens'\n",
        ")\n",
        "\n",
        "# Customize the layout\n",
        "fig.update_layout(\n",
        "    width=950,\n",
        "    height=650,\n",
        "    xaxis_tickangle=-45,\n",
        "    showlegend=True,\n",
        "    margin=dict(t=60, b=80, l=50, r=50)\n",
        ")\n",
        "\n",
        "# Update traces for better bubble appearance\n",
        "fig.update_traces(\n",
        "    marker=dict(\n",
        "        sizemode='diameter',\n",
        "        sizeref=max(top_10_states['SALARY'])/50,\n",
        "        sizemin=8,\n",
        "        line=dict(width=1, color='white')\n",
        "    )\n",
        ")\n",
        "\n",
        "fig_salaries = fig\n",
        "fig_salaries.write_html(\"./figures/salary_distribution_states.html\", include_plotlyjs='cdn')"
      ],
      "id": "c80b81e0",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "```{=html}\n",
        "<iframe width=\"1000\" height=\"700\" src=\"./figures/salary_distribution_states.html\" title=\"Analyst Distribution (with Salaries)\"></iframe>\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "# Remote VS Onsite job \n",
        "\n",
        "## Remote Job Distribution by General Industry\n",
        "```{=html}\n",
        "<iframe width=\"1000\" height=\"700\" src=\"./figures/top_industries.html\" title=\"Remote Job Distribution by Industry(Top 10 Industries)\"></iframe>\n",
        "```\n",
        "In terms of the Remote Job Distribution by general industry, the top 3 industries are Real Estate and Rental and Leasing, Information, Finance and Insurance. As we can see even the traditional industries such as manufacturing, educational services starte to have higher remote job proportion, which means the remote work nowadays has already became a widespread jobs or requirements across multiple industries.\n",
        "\n",
        "###Top Industries: Remote job Trends Over time\n",
        "\n",
        "```{=html}\n",
        "<iframe width=\"1000\" height=\"700\" src=\"./figures/remote_job_over_time.html\" title=\"Remote Job increase over time(Top 5 Industries)\"></iframe>\n",
        "```\n",
        "Take a dive into the Top industries over time with specific industries, in general, this plot displays monthly trends in job postings for from May 2024 to September 2024. As we can see in here, the remote job ratio was represented by the y-axis, which is the proportion of job postings marked as remote out of total postings in each industry per month. Higher remote ratio, represents their have more remote job opportunities open in each industry.\n",
        "\n",
        "Indeed, we can see the general trend in this plot as the remote job among different industries, which reaches the peak in Auguest 2024 and \n",
        "then drop siginificantly in September, which suggests that the many companies end their summer recruitings. As we can see the real estate and rental industry goes from high and crash in September. In contrast, the Finance and Insurance industry has higher stability， which has consistent job postings from May to September. \n",
        "\n",
        "\n",
        "\n",
        "![Remote jobs Administrative and Support and Waste Management and Remediation Services](./figures/Remote_jobs_Administrative and Support and Waste Management and Remediation Services.jpg){width=90% fig-align=\"center\"}\n",
        "From the above plot result, we can see that the remote job ratio trend started low in May, then continue drop low in June, then reached the peak in August (31%), after that drop low in September. In compare with the trend alighed with gray area: job postings are also have more postings in Auguest and less in September.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "![Remote jobs Finance and Insurance](./figures/Remote_jobs_Finance and Insurance.jpg){width=90% fig-align=\"center\"}\n",
        "From the above plot result, we can see that the remote job ratio trend started low in May, gradually increase in June, then reached the peak in July (33%), after that gradually drop low August. The job posting area remained high and stable through july, which is friendly for people who are seek for remote jobs.\n",
        "\n",
        "\n",
        "![Remote jobs Real Estate and Rental and Leasing](./figures/Remote_jobs_Real Estate and Rental and Leasing.jpg){width=90% fig-align=\"center\"}\n",
        "From the above plot result, we can see that the remote job ratio trend started high (43%) in May, drop in June, then rebound in July then reached the peak in August (53%), after that has a significantly drop in September(near 0). The job posting area remained comparable stable, which has high volumn in May and June, then has a siginificant drop in July and modest increase in Auguest and September. The differences between Job posting \n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{=html}\n",
        "<iframe width=\"1000\" height=\"700\" src=\"./figures/state_remote_job_ratio.html\" title=\"Remote state job ratio with average\"></iframe>\n",
        "```\n",
        "From above choreleograph, we can see that the green color depth represents the remote jobs proportions to their job postings, and with the average salary and average job experiences.\n",
        "To be more clearly, we can see that the Maine, Vermont, Alaska and Colorado have higher remote ratio, which represents their high demands on remote jobs \n",
        "souther state on the othe hand has lighter remote ratio, which represents that there are fewer remote job demands in these regions' industries. \n",
        "\n",
        "\n",
        "\n",
        "---\n",
        "title: \"Ai Vs Non AI Jobs\"\n",
        "\n",
        "format:\n",
        "    html:\n",
        "        code-fold: true\n",
        "\n",
        "jupyter: python3\n",
        "execute:\n",
        "    echo: true\n",
        "    eval: false\n",
        "---"
      ],
      "id": "5b3f4db7"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import findspark\n",
        "findspark.init()\n",
        "\n",
        "from pyspark.sql import SparkSession\n",
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.io as pio\n",
        "import numpy as np\n",
        "\n",
        "np.random.seed(423548)\n",
        "\n",
        "pio.renderers.default = \"notebook\"\n",
        "\n",
        "# Initialize Spark Session\n",
        "spark = SparkSession.builder.appName(\"LightcastData\").getOrCreate()\n",
        "\n",
        "# Load Data\n",
        "df = spark.read.option(\"header\", \"true\").option(\"inferSchema\", \"true\").option(\"multiLine\",\"true\").option(\"escape\", \"\\\"\").csv(\"./data/lightcast_job_postings.csv\")\n",
        "\n",
        "\n",
        "df.printSchema() # comment this line when rendering the submission\n",
        "df.show(5)"
      ],
      "id": "16d31db8",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# clean the data\n",
        "\n",
        "from pyspark.ml.feature import StringIndexer, OneHotEncoder, VectorAssembler\n",
        "from pyspark.ml import Pipeline\n",
        "from pyspark.sql.functions import when, col\n",
        "\n",
        "df= df.drop(\"ID\" ,\"LAST_UPDATED_DATE\",\"LAST_UPDATED_TIMESTAMP\",\"DUPLICATES\", \"EXPIRED\",\"SOURCE_TYPES\",\"SOURCES\",\n",
        "            \"URL\", \"ACTIVE_URLS\", \"ACTIVE_SOURCES_INFO\",\"TITLE_RAW\",\"BODY\", \"MODELED_EXPIRED\", \"MODELED_DURATION\", \"COMPANY\", \n",
        "            \"COMPANY_NAME\", \"COMPANY_RAW\", \"COMPANY_IS_STAFFING\", \"EDUCATION_LEVELS\")\n",
        "\n",
        "df = df.withColumn(\"REMOTE_TYPE_NAME\", \n",
        "                   when(col(\"REMOTE_TYPE_NAME\") == \"[None]\", \"Not Remote\")\n",
        "                   .otherwise(col(\"REMOTE_TYPE_NAME\")))\n",
        "\n",
        "df_clean = df.na.drop(subset=[\n",
        "    \"salary\", \"MIN_YEARS_EXPERIENCE\", \"MAX_YEARS_EXPERIENCE\",\n",
        "    \"EDUCATION_LEVELS_NAME\", \"EMPLOYMENT_TYPE_NAME\", \"REMOTE_TYPE_NAME\",\n",
        "    \"DURATION\",\n",
        "])\n",
        "\n",
        "df_clean.show(5)"
      ],
      "id": "ce81e8e2",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "titles = df_clean.select(\"TITLE_NAME\").distinct().rdd.flatMap(lambda x: x).collect()\n",
        "for title in titles:\n",
        "    print(title)"
      ],
      "id": "d57f5fe3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#gave chatgpt the list and told it to split into ai impacted and not\n",
        "ai_impacted_jobs = [\n",
        "    'Trust Officers',\n",
        "    'Cloud Migration Engineers',\n",
        "    'EDI Developers',\n",
        "    'Permit Specialists',\n",
        "    'Data Integration Leads',\n",
        "    'Blockchain Developers',\n",
        "    'Lead Intelligence Analysts',\n",
        "    'Sales Architects',\n",
        "    'Business Intelligence Leads',\n",
        "    'Data Analyst Managers',\n",
        "    'Project Support Analysts',\n",
        "    'Sales Planning Analysts',\n",
        "    'Hourly Managers',\n",
        "    'Industrial Equipment Mechanics',\n",
        "    'Value Engineers',\n",
        "    'Enterprise Applications Consultants',\n",
        "    'SAP FICO Consultants',\n",
        "    'SAP ABAP Consultants',\n",
        "    'Oracle Erp Consultants',\n",
        "    'Member Liaisons',\n",
        "    'Data Solutions Analysts',\n",
        "    'Transformation Analysts',\n",
        "    'GIS Data Analysts',\n",
        "    'Japanese Bilingual Administrative Assistants',\n",
        "    'Project Leads',\n",
        "    'People Analytics Analysts',\n",
        "    'Human Resources Reporting Analysts',\n",
        "    'Implementation Consultants',\n",
        "    'Lead Enterprise Architects',\n",
        "    'Branch Bankers',\n",
        "    'Growth Marketing Analysts',\n",
        "    'Chargeback Analysts',\n",
        "    'Strategy Leads',\n",
        "    'Innovation Analysts',\n",
        "    'Business Insights Managers',\n",
        "    'CRM Business Analysts',\n",
        "    'Localization Producers',\n",
        "    'EDI Analysts',\n",
        "    'Scientific Data Analysts',\n",
        "    'Bilingual Japanese Customer Service Representatives',\n",
        "    'SQL/ETL Developers',\n",
        "    'Data Quality Leads',\n",
        "    'Data Visualization Analysts',\n",
        "    'Data Analytics Engineers',\n",
        "    'Foundation Administrators',\n",
        "    'SQL Reporting Analysts',\n",
        "    'Procurement Analysts',\n",
        "    'Manual Testers',\n",
        "    'Analytics Associates',\n",
        "    'Supply Chain Architects',\n",
        "    'SAP SD Analysts',\n",
        "    'Oracle Cloud Financials Consultants',\n",
        "    'Data Quality Assurance Analysts',\n",
        "    'Client Finance Directors',\n",
        "    'Population Health Analysts',\n",
        "    'Enterprise Solutions Consultants',\n",
        "    'Digital Product Analysts',\n",
        "    'Line Pilots',\n",
        "    'Processing Clerks',\n",
        "    'Client Solutions Strategists',\n",
        "    'Business Intelligence Specialists',\n",
        "    'Accounting Consultants',\n",
        "    'Business Intelligence Analysts',\n",
        "    'SAP CRM Consultants',\n",
        "    'Human Capital Management Consultants',\n",
        "    'IAM Architects',\n",
        "    'SAP Ariba Consultants',\n",
        "    'Territory Assistants',\n",
        "    'Immigration Analysts',\n",
        "    'Customer Experience Associates',\n",
        "    'Global Analysts',\n",
        "    'Analysts',\n",
        "    'Document Management Clerks',\n",
        "    'Data Reporting Analysts',\n",
        "    'Quality Analysts',\n",
        "    'SAP HANA Consultants',\n",
        "    'Site Analysts',\n",
        "    'Business Architects',\n",
        "    'Data Analytics Developers',\n",
        "    'Digital Solution Architect Managers',\n",
        "    'Information Governance Analysts',\n",
        "    'Business Coaches',\n",
        "    'Configuration Management Analysts',\n",
        "    'Commercial Analysts',\n",
        "    'Analytics Consultants',\n",
        "    'Buyers',\n",
        "    'Enterprise Solutions Architects',\n",
        "    'Remediation Analysts',\n",
        "    'Search Planners',\n",
        "    'Insurance Associates',\n",
        "    'People Operations Generalists',\n",
        "    'Appeals Specialists',\n",
        "    'IT Project Assistants',\n",
        "    'Data Analytics Architects',\n",
        "    'Methods Analysts',\n",
        "    'Liquidity Analysts',\n",
        "    'Functional Consultants',\n",
        "    'SAP HR Consultants',\n",
        "    'Performance Directors',\n",
        "    'ERP Implementation Specialists',\n",
        "    'Tribal Administrators',\n",
        "    'Study Design Leads',\n",
        "    'Equipment Analysts',\n",
        "    'Quality Assurance Monitors',\n",
        "    'Integration Team Leads',\n",
        "    'Invoice Analysts',\n",
        "    'SAP FICO Functional Consultants',\n",
        "    'Enterprise Relationship Managers',\n",
        "    'Enterprise Data Architects',\n",
        "    'SAP PP/QM Consultants',\n",
        "    'Management Analysts',\n",
        "    'Speech Assistants',\n",
        "    'SAP Business Analysts',\n",
        "    'Data Migration Analysts',\n",
        "    'SAP Techno Functional Consultants',\n",
        "    'SAP Supply Chain Consultants',\n",
        "    'Enterprise Directors',\n",
        "    'Data Processing Analysts',\n",
        "    'SAS Data Analysts',\n",
        "    'Manufacturing Consultants',\n",
        "    'Demand Analysts',\n",
        "    'Netsuite Principal Consultants',\n",
        "    'OTM Consultants',\n",
        "    'Modernization Superintendents',\n",
        "    'Mapping Analysts',\n",
        "    'Enterprise Systems Architects',\n",
        "    'Business Intelligence Associates',\n",
        "    'Oracle Business Analysts',\n",
        "    'SAP Support Analysts',\n",
        "    'Automation Engineers',\n",
        "    'Excel VBA Developers',\n",
        "    'Financial Data Analysts',\n",
        "    'Power Analysts',\n",
        "    'Sales Analysts',\n",
        "    'Lead IT Analysts',\n",
        "    'Development Analysts',\n",
        "    'Analytics Managers',\n",
        "    'Financial Applications Specialists',\n",
        "    'Sales Solution Architects',\n",
        "    'Survey Analysts',\n",
        "    'Data Analysts/Data Scientists',\n",
        "    'Quality Control Reviewers',\n",
        "    'Oracle EBS Consultants',\n",
        "    'Data Services Analysts',\n",
        "    'ERP Implementation Managers',\n",
        "    'Knowledge Analysts',\n",
        "    'Enterprise Business Analysts',\n",
        "    'Test Data Analysts',\n",
        "    'Techno Functional Analysts',\n",
        "    'Netsuite Consultants',\n",
        "    'Cryptologists',\n",
        "    'PMO Analysts',\n",
        "    'Reference Data Analysts',\n",
        "    'Clinical Data Analysts',\n",
        "    'Enterprise Business Architects',\n",
        "    'Enterprise Cloud Architects',\n",
        "    'SAP Security Consultants',\n",
        "    'Data Leads',\n",
        "    'Tools Developers',\n",
        "    'Marketing Analysts',\n",
        "    'Financial Planning and Analysis Analysts',\n",
        "    'Finance Systems Analysts',\n",
        "    'Production Operators',\n",
        "    'Oracle Functional Analysts',\n",
        "    'IT Buyers',\n",
        "    'Process Engineers',\n",
        "    'Privacy Analysts',\n",
        "    'Enterprise Resources Planning Managers',\n",
        "    'Real Estate Analysts',\n",
        "    'Systems Integration Architects',\n",
        "    'End User Computing Analysts',\n",
        "    'Data Analysts/Developers',\n",
        "    'Publishing Specialists',\n",
        "    'SQL Analysts',\n",
        "    'Account Analysts',\n",
        "    'Engineering Data Analysts',\n",
        "    'Oracle EBS Business Analysts',\n",
        "    'Directors of Business Intelligence',\n",
        "    'Reporting Associates',\n",
        "    'SAP HCM Consultants',\n",
        "    'Feasibility Managers',\n",
        "    'Data Management Administrators',\n",
        "    'Walkers',\n",
        "    'Production Analysts',\n",
        "    'HRIS Associates',\n",
        "    'Data Analytics Leads',\n",
        "    'Data Analytics Specialists',\n",
        "    'Data Security Analysts',\n",
        "    'Principal Data Scientists',\n",
        "    'Researchers',\n",
        "    'Procurement Business Analysts',\n",
        "    'Oracle Applications Analysts',\n",
        "    'Forecast Analysts',\n",
        "    'Supply Chain Data Analysts',\n",
        "    'Analytics and Insights Managers',\n",
        "    'MDM Developers',\n",
        "    'Business Support Analysts',\n",
        "    'Food and Beverage Analysts',\n",
        "    'Intelligence Research Analysts',\n",
        "    'Validation Leads',\n",
        "    'Associate Business Managers',\n",
        "    'Enterprise Data Analysts',\n",
        "    'IT Governance Analysts',\n",
        "    'Domain Architects',\n",
        "    'Compliance Business Analysts',\n",
        "    'Implementation Specialists',\n",
        "    'Placement Managers',\n",
        "    'Corporate Architects',\n",
        "    'Splunk Developers',\n",
        "    'Work Force Management Analysts',\n",
        "    'Banking Consultants',\n",
        "    'Data Stewards',\n",
        "    'SAP MDM Consultants',\n",
        "    'SAP Specialists',\n",
        "    'Data Validation Analysts',\n",
        "    'Business Intelligence Data Warehouse Architects',\n",
        "    'Data Science Associates',\n",
        "    'Solution Leads',\n",
        "    'SAP Data Analysts',\n",
        "    'SAP Finance Consultants',\n",
        "    'Doctors',\n",
        "    'SQL Data Analysts',\n",
        "    'Patient Revenue Cycle Specialists',\n",
        "    'People Analytics Managers',\n",
        "    'Data Scientists',\n",
        "    'Digital Data Analysts',\n",
        "    'Data Control Clerks',\n",
        "    'Storeroom Clerks',\n",
        "    'Finance Business Analysts',\n",
        "    'SAP HR Analysts',\n",
        "    'Business Intelligence and Analytics Managers',\n",
        "    'Brand Activation Managers',\n",
        "    'Enterprise Project Managers',\n",
        "    'Data Analytics Consultants',\n",
        "    'Programmer Analysts',\n",
        "    'Sales Data Analysts',\n",
        "    'Data Reviewers',\n",
        "    'Contract Analysts',\n",
        "    'Decision Support Analysts',\n",
        "    'Data Associates',\n",
        "    'E-Commerce Architects',\n",
        "    'Risk Control Managers',\n",
        "    'Debt Specialists',\n",
        "    'Risk and Controls Managers',\n",
        "    'Data Entry Analysts',\n",
        "    'Platform Analysts',\n",
        "    'Financial Systems Analysts',\n",
        "    'Claims Resolution Analysts',\n",
        "    'Lead Business Intelligence Analysts',\n",
        "    'Inside Auto Claims Representatives',\n",
        "    'Customer Contact Center Managers',\n",
        "    'Data Governance Analysts',\n",
        "    'Business Operations Specialists',\n",
        "    'SAP Technical Consultants',\n",
        "    'Data Engineering Managers',\n",
        "    'SAP EWM Consultants',\n",
        "    'Tax Controllers',\n",
        "    'Transmission Analysts',\n",
        "    'Business Analysts',\n",
        "    'Credit Analysts',\n",
        "    'CSV Consultants',\n",
        "    'Patient Services Associates',\n",
        "    'Research Data Analysts',\n",
        "    'Medical Economics Analysts',\n",
        "    'SQL Administrators',\n",
        "    'SAP Master Data Analysts',\n",
        "    'Customer Care Analysts',\n",
        "    'Title Processors',\n",
        "    'Power Business Intelligence Developers',\n",
        "    'Data Quality Analysts',\n",
        "    'Quality Assurance Analysts',\n",
        "    'Consulting Engagement Managers',\n",
        "    'Vice Presidents of Operational Excellence',\n",
        "    'Insights Analysts',\n",
        "    'Inventory Analysts',\n",
        "    'Data Support Analysts',\n",
        "    'SAP Business One Consultants',\n",
        "    'Data Management Leads',\n",
        "    'Platform Administrators',\n",
        "    'Oracle Financial Functional Consultants',\n",
        "    'Architecture Managers',\n",
        "    'ERP Analysts',\n",
        "    'Growth Associates',\n",
        "    'Directors of School Nutrition',\n",
        "    'Operations and Policy Analysts',\n",
        "    'Lead Data Analysts',\n",
        "    'SAP SD Functional Consultants',\n",
        "    'Assistant Federal Security Directors',\n",
        "    'Oracle Cloud Architects',\n",
        "    'Quality Assurance Leads',\n",
        "    'SAP FICO Analysts',\n",
        "    'Repair Analysts',\n",
        "    'SAP SD Consultants',\n",
        "    'SAP SRM Consultants',\n",
        "    'Hyperion Consultants',\n",
        "    'SAP Systems Analysts',\n",
        "    'Adobe Experience Manager Architects',\n",
        "    'Quality Assurance Analysts/Engineers',\n",
        "    'Oracle Utilities Professional Services CC&B Implementation Consultants',\n",
        "    'SAP OTC Consultants',\n",
        "    'Data Warehouse Business Analysts',\n",
        "    'Client Data Analysts',\n",
        "    'Documentum Administrators',\n",
        "    'Project Analysts',\n",
        "    'Korean Linguists',\n",
        "    'Data Governance Managers',\n",
        "    'Oracle Consultants',\n",
        "    'Navigators',\n",
        "    'Customer Data Analysts',\n",
        "    'Enterprise Technical Architects',\n",
        "    'Cash Management Associates',\n",
        "    'Equity Traders',\n",
        "    'Financial Analysts',\n",
        "    'ERP Architects',\n",
        "    'Business Intelligence and Data Analysts',\n",
        "    'Automation Consultants',\n",
        "    'Governance Analysts',\n",
        "    'ERP Systems Analysts',\n",
        "    'Commercial Banking Credit Analysts',\n",
        "    'Certified Public Accountants',\n",
        "    'Data Operations Analysts',\n",
        "    'Category Analysts',\n",
        "    'Regional Business Managers',\n",
        "    'GCP Auditors',\n",
        "    'Architectural Project Coordinators',\n",
        "    'Delivery Analysts',\n",
        "    'SAP MM Functional Consultants',\n",
        "    'Techno Functional Leads',\n",
        "    'Clinical Data Managers',\n",
        "    'Administrators',\n",
        "    'Enterprise Network Managers',\n",
        "    'Healthcare Business Analysts',\n",
        "    'Solutions Architects',\n",
        "    'Ward Clerks',\n",
        "    'Account Coordinators',\n",
        "    'Data Abstractors',\n",
        "    'Data Scientists/Analysts',\n",
        "    'SAP Functional Consultants',\n",
        "    'Product Lifecycle Managers',\n",
        "    'Data Intelligence Analysts',\n",
        "    'Data Warehouse Analysts',\n",
        "    'CNC Administrators',\n",
        "    'Life Sciences Consultants',\n",
        "    'Data Processing Clerks',\n",
        "    'Production Planning Analysts',\n",
        "    'Business Growth Consultants',\n",
        "    'Chief Architects',\n",
        "    'Logistics Administrators',\n",
        "    'Vendor Analysts',\n",
        "    'Quantitative Analytics Managers',\n",
        "    'Treasury Consultants',\n",
        "    'Crime Analysts',\n",
        "    'SAP Business Process Analysts',\n",
        "    'Call Center Analysts',\n",
        "    'GRC Analysts',\n",
        "    'Competitive Intelligence Analysts',\n",
        "    'Oracle Technical Consultants',\n",
        "    'Headend Engineers',\n",
        "    'Claims Business Analysts',\n",
        "    'General Managers',\n",
        "    'Systems Architecture Engineers',\n",
        "    'SAP Ariba Managers',\n",
        "    'Customer Analytics Managers',\n",
        "    'Customer Experience Analysts',\n",
        "    'LIS Analysts',\n",
        "    'SAP Consultants',\n",
        "    'SAP Hybris Consultants',\n",
        "    'SAP PI Consultants',\n",
        "    'Enterprise Application Analysts',\n",
        "    'Data and Analytics Consultants',\n",
        "    'Agile Product Owners',\n",
        "    'Business Intelligence Reporting Analysts',\n",
        "    'Management Associates',\n",
        "    'Health Data Analysts',\n",
        "    'Enterprise Systems Engineers',\n",
        "    'Lead Analysts',\n",
        "    'Data Migration Consultants',\n",
        "    'Professors of Biological Sciences',\n",
        "    'Oracle Business Systems Analysts',\n",
        "    'Regional Fleet Managers',\n",
        "    'Enterprise Systems Analysts',\n",
        "    'Inflight Supervisors',\n",
        "    'Operations Process Engineers',\n",
        "    'SAP Developers',\n",
        "    'Customer Care Experts',\n",
        "    'Reporting Analysts',\n",
        "    'Commercial Excellence Managers',\n",
        "    'Lead Quality Analysts',\n",
        "    'Oracle EBS Technical Consultants',\n",
        "    'Records Assistants',\n",
        "    'Directors of Cloud Security',\n",
        "    '.NET Technical Architects',\n",
        "    'Associates',\n",
        "    'Trend Analysts',\n",
        "    'Digital Analysts',\n",
        "    'Innovation Specialists',\n",
        "    'Data Governance Leads',\n",
        "    'Data Analysts',\n",
        "    'Directors of Sponsored Programs',\n",
        "    'Enterprise Resource Planning Managers',\n",
        "    'Wealth Management Analysts',\n",
        "    'Quantitative Data Analysts',\n",
        "    'Origination Associates',\n",
        "    'Enterprise Business Consultants',\n",
        "    'SAP Application Consultants',\n",
        "    'Information Analysts',\n",
        "    'Process Improvement Analysts',\n",
        "    'Consumer Analysts',\n",
        "    'Communications Analysts',\n",
        "    'GIS Consultants',\n",
        "    'Data Analyst Specialists',\n",
        "    'Plant Maintenance Managers',\n",
        "    'Netsuite Functional Consultants',\n",
        "    'Plant Chemists',\n",
        "    'Integration Consultants',\n",
        "    'Data Management Analysts',\n",
        "    'Oracle Financial Consultants',\n",
        "    'SAP Plant Maintenance Consultants',\n",
        "    'Analytics Leads',\n",
        "    'Lead Level Designers',\n",
        "    'Solutions Analysts',\n",
        "    'Data and Reporting Analysts',\n",
        "    'Data Analytics Product Managers',\n",
        "    'SAP Analysts',\n",
        "    'Implementation Analysts',\n",
        "    'Revenue Cycle Analysts',\n",
        "    'Case Management Associates',\n",
        "    'SAP Successfactors Consultants',\n",
        "    'IT Governance Managers',\n",
        "    'Sales Professionals',\n",
        "    'Principal Architects',\n",
        "    'Oracle HCM Consultants',\n",
        "    'Data Science Analysts',\n",
        "    'HANA Consultants',\n",
        "    'OSP Managers',\n",
        "    'Interface Analysts',\n",
        "    'Transportation Systems Analysts',\n",
        "    'Forms Analysts',\n",
        "    'Master Data Coordinators',\n",
        "    'Enterprise Application Architects',\n",
        "    'Epic Security Analysts',\n",
        "    'Intercompany Accountants',\n",
        "    'Client Insights Analysts',\n",
        "    'Data Analytics Associates',\n",
        "    'SAP SD/MM Consultants',\n",
        "    'SAP Administrators',\n",
        "    'Supply Chain Business Managers',\n",
        "    'Assistant Service Experience Managers',\n",
        "    'Data Clerks',\n",
        "    'Data Visualization Specialists',\n",
        "    'Growth Specialists',\n",
        "    'SAP Basis Leads',\n",
        "    'Functional Analysts',\n",
        "    'SAP Functional Analysts',\n",
        "    'Knowledge Experts',\n",
        "    'Artificial Intelligence Engineers',\n",
        "    'Financial Planning and Analysis Managers',\n",
        "    'Business Intelligence Data Analysts',\n",
        "    'Peoplesoft Business Analysts',\n",
        "    'Platform Architects',\n",
        "    'Systems Architects',\n",
        "    'Assessment Analysts',\n",
        "    'Solutions Consultants',\n",
        "    'Surface Designers',\n",
        "    'SAP GTS Consultants',\n",
        "    'Data Insights Analysts',\n",
        "    'Oracle Cloud Technical Consultants',\n",
        "    'Data Modelers',\n",
        "    'Distribution Consultants',\n",
        "    'ERP Administrators',\n",
        "    'SAP MM Consultants',\n",
        "    'ERP Consultants',\n",
        "    'Financial Planning Analysts',\n",
        "    'Intelligence Analysts',\n",
        "    'SAP Basis Consultants',\n",
        "    'Consulting Technical Managers',\n",
        "    'Insights and Reporting Analysts',\n",
        "    'Advanced Analytics Analysts',\n",
        "    'Medical Data Analysts',\n",
        "    'Solution Architects/Principal Consultants',\n",
        "    'Technical Architects',\n",
        "    'Data and Analytics Managers',\n",
        "    'Travel and Expense Analysts',\n",
        "    'OFSAA Business Analysts',\n",
        "    'Facilities HVAC Technicians',\n",
        "    'Data Analytics Analysts',\n",
        "    'Web Data Analysts',\n",
        "    'Staff Data Engineers',\n",
        "    'Program Data Analysts',\n",
        "    'Associate Consultants',\n",
        "    'Safety Data Analysts',\n",
        "    'Controllers',\n",
        "    'CAD Operators',\n",
        "    'Security Analysts',\n",
        "    'Oracle Finance Functional Consultants',\n",
        "    'Enterprise Architects',\n",
        "    'Finance Data Analysts',\n",
        "    'ERP Business Systems Analysts',\n",
        "    'IT Data Analysts',\n",
        "    'Business Analysis Interns',\n",
        "    'Information Services Analysts',\n",
        "    'Data Solutions Consultants',\n",
        "    'Enterprise Program Managers',\n",
        "    'SAP MM Analysts',\n",
        "    'IT Applications Specialists',\n",
        "    'Oracle EBS Functional Consultants',\n",
        "    'Research and Evaluation Analysts',\n",
        "    'Customer Support Leads',\n",
        "    'Oracle SCM Functional Consultants',\n",
        "    'IT Data Analytics Analysts',\n",
        "    'Finance Assistants',\n",
        "    'Business Operations Associates',\n",
        "    'Quality Assurance Automation Testers',\n",
        "    'Technical Project Managers',\n",
        "    'Data Science and Analytics Managers',\n",
        "    'Oracle Cloud HCM Consultants',\n",
        "    'Business Intelligence Managers',\n",
        "    'Customer Support Administrators',\n",
        "    'Procurement Operations Associates',\n",
        "    'Analytics and Reporting Analysts',\n",
        "    'Research Specialists',\n",
        "    'BSA Consultants',\n",
        "    'Oracle Systems Analysts',\n",
        "    'Bilingual Office Managers',\n",
        "    'Institutional Sales Analysts',\n",
        "    'Consulting Solutions Architects',\n",
        "    'Corporate Finance Associates',\n",
        "    'Immunology Specialists',\n",
        "    'Global Trade Analysts',\n",
        "    'Search Coordinators',\n",
        "    'Higher Education Consultants',\n",
        "    'Enterprise Risk Analysts',\n",
        "    'ERP Support Specialists',\n",
        "    'Spanish and English Teachers',\n",
        "    'Assistant Vice Presidents',\n",
        "    'Data Protection Specialists',\n",
        "    'Manufacturing Services Managers',\n",
        "    'Cash Managers',\n",
        "    'Pricing Data Analysts',\n",
        "    'Directors of Toxicology',\n",
        "    'Data Acquisition Analysts',\n",
        "    'Process Analysts',\n",
        "    'Data Technicians',\n",
        "    'Clinical Quality Analysts',\n",
        "    'ERP Specialists',\n",
        "    'IAM Analysts',\n",
        "    'Data Infrastructure Engineers',\n",
        "    'Industry Analysts',\n",
        "    'Oracle Database Developers',\n",
        "    'Platform Support Specialists',\n",
        "    'School Education Managers',\n",
        "    'Clinical Data Associates',\n",
        "    'Oracle Functional Consultants',\n",
        "    'Enterprise Analysts',\n",
        "    'Manufacturing Analysts',\n",
        "    'Targeting Analysts',\n",
        "    'Master Data Analysts',\n",
        "    'SAP Basis Administrators',\n",
        "    'Data Center Analysts',\n",
        "    'Business Assistants',\n",
        "    'Philanthropy Assistants',\n",
        "    'IT Analysts',\n",
        "    'Middle Office Analysts',\n",
        "    'Investment Data Analysts',\n",
        "    'Salesforce Consultants'\n",
        "]"
      ],
      "id": "855080bd",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "from pyspark.sql.functions import when, col, lit, avg, count\n",
        "\n",
        "df_final = df_clean.withColumn(\n",
        "    'ai_impacted',\n",
        "    when(col('title_name').isin(ai_impacted_jobs), lit('yes')).otherwise(lit('no'))\n",
        ")\n",
        "\n",
        "avg_salary = df_final.groupBy(\"state_name\").agg(avg(\"salary\").alias(\"avg_salary\"))\n",
        "\n",
        "\n",
        "df_final = df_final.join(avg_salary, on=\"state_name\", how=\"left\")\n",
        "\n",
        "count = df_final.groupBy(\"state_name\").agg(count(\"*\").alias(\"count\"))\n",
        "\n",
        "\n",
        "df_final = df_final.join(count, on=\"state_name\", how=\"left\")\n",
        "\n",
        "df_final.select(\"count\").distinct().show()"
      ],
      "id": "97e9129b",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "df_final_pd = df_final.toPandas()\n",
        "\n",
        "fig = px.scatter(\n",
        "    df_final_pd,  \n",
        "    x=\"STATE_NAME\",                       \n",
        "    y=\"avg_salary\",                 \n",
        "    size=\"count\",                 \n",
        "    color=\"ai_impacted\",                  \n",
        "    title=\"Average Salary by State and AI Impact\",\n",
        "    size_max=60,\n",
        "    color_discrete_map={\n",
        "        \"yes\": \"#2dbf78\",   \n",
        "        \"no\": \"#8adfbd\"  \n",
        "    }\n",
        "\n",
        ")\n",
        "\n",
        "fig.update_layout(\n",
        "    legend_title_text=\"AI Impacted\",\n",
        "    xaxis_title=\"State\",\n",
        "    yaxis_title=\"Average Salary\",\n",
        "    xaxis=dict(tickangle=45),\n",
        "    yaxis=dict(categoryorder='category descending')\n",
        ")\n",
        "\n",
        "fig.show()"
      ],
      "id": "2ee40b49",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: Data Cleaning and Modeling\n",
        "format:\n",
        "    html:\n",
        "        code-fold: true\n",
        "        toc: true\n",
        "        toc-depth: 2\n",
        "exeucte:\n",
        "    eval: true\n",
        "    echo: false\n",
        "    freeze: auto\n",
        "---\n"
      ],
      "id": "5ac1c22a"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "#| fig-cap: Analyst Job Distribution Across the United States\n",
        "#| fig-align: center\n",
        "#| label: fig-analyst-distribution-modeling\n",
        "import findspark\n",
        "findspark.init()\n",
        "\n",
        "from pyspark.sql import SparkSession\n",
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.io as pio\n",
        "import numpy as np\n",
        "\n",
        "np.random.seed(42)\n",
        "\n",
        "pio.renderers.default = \"notebook\"\n",
        "\n",
        "# Initialize Spark Session\n",
        "spark = SparkSession.builder.appName(\"LightcastData\").getOrCreate()\n",
        "\n",
        "# Load Data\n",
        "df = spark.read.option(\"header\", \"true\").option(\"inferSchema\", \"true\").option(\"multiLine\",\"true\").option(\"escape\", \"\\\"\").csv(\"./data/lightcast_job_postings.csv\")\n",
        "\n",
        "# Show Schema and Sample Data\n",
        "print(\"---This is Diagnostic check, No need to print it in the final doc---\")\n",
        "\n",
        "df.printSchema() # comment this line when rendering the submission\n",
        "df.show(5)"
      ],
      "id": "fig-analyst-distribution-modeling",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "results": "hide"
      },
      "source": [
        "#| echo: false\n",
        "#| warning: false\n",
        "#| eval: false\n",
        "\n",
        "import pandas as pd\n",
        "df = pd.read_csv(\"./data/lightcast_job_postings.csv\")"
      ],
      "id": "a01c7d3d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "results": "hide"
      },
      "source": [
        "#| echo: false\n",
        "#| warning: false\n",
        "#| eval: false\n",
        "\n",
        "import pandas as pd\n",
        "\n",
        "df = pd.read_csv(\"./data/lightcast_job_postings.csv\")\n",
        "\n",
        "columns_to_drop = [\n",
        "    \"ID\", \"URL\", \"ACTIVE_URLS\", \"DUPLICATES\", \"LAST_UPDATED_TIMESTAMP\",\n",
        "    \"NAICS2\", \"NAICS3\", \"NAICS4\", \"NAICS5\", \"NAICS6\",\n",
        "    \"SOC_2\", \"SOC_3\", \"SOC_5\"\n",
        "]\n",
        "\n",
        "df.drop(columns=columns_to_drop, inplace=True)"
      ],
      "id": "6b20a803",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "results": "hide"
      },
      "source": [
        "#| echo: false\n",
        "#| warning: false\n",
        "#| eval: false\n",
        "\n",
        "print(df.columns.tolist())"
      ],
      "id": "c56109b2",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "results": "hide"
      },
      "source": [
        "#| echo: false\n",
        "#| warning: false\n",
        "#| eval: false\n",
        "!pip install missingno"
      ],
      "id": "d5ecc6e4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "results": "hide"
      },
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "import missingno as msno\n",
        "import matplotlib.pyplot as plt\n",
        "# Visualize missing values\n",
        "msno.heatmap(df)\n",
        "plt.title(\"Missing Values Heatmap\")\n",
        "plt.show()\n",
        "\n",
        "# Drop columns with >50% missing values\n",
        "df.dropna(thresh=len(df) * 0.5, axis=1, inplace=True)\n",
        "\n",
        "# Fill only the columns you actually have\n",
        "if 'Industry' in df.columns:\n",
        "    df[\"Industry\"].fillna(\"Unknown\", inplace=True)\n",
        "    df[\"Salary\"].fillna(df[\"Salary\"].median(), inplace=True)"
      ],
      "id": "446897b4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "results": "hide"
      },
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "df = df.drop_duplicates(subset=[\"TITLE\", \"COMPANY\", \"LOCATION\", \"POSTED\"], keep=\"first\")"
      ],
      "id": "0277cfc3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "results": "hide"
      },
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "df = df[df['NAICS_2022_2_NAME'] != 'Unclassified Industry']"
      ],
      "id": "191e6dd4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "results": "hide"
      },
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "df['REMOTE_TYPE_NAME'] = df['REMOTE_TYPE_NAME'].replace('[None]', 'Not Remote')\n"
      ],
      "id": "8f23ae56",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "results": "hide"
      },
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "\n",
        "# Step 1: Prepare data\n",
        "data = {\n",
        "    'Industry': [\n",
        "        'Wholesale Trade', 'Retail Trade', 'Real Estate and Rental and Leasing',\n",
        "        'Professional, Scientific, and Technical Services', 'Manufacturing',\n",
        "        'Information', 'Health Care and Social Assistance',\n",
        "        'Finance and Insurance', 'Educational Services',\n",
        "        'Administrative and Support and Waste Management and Remediation Services'\n",
        "    ],\n",
        "    'Flexible Remote': [87.8, 94.4, 97.6, 92.2, 89.7, 95.8, 92.1, 94.8, 89.0, 94.8],\n",
        "    'Onsite': [12.2, 5.6, 2.4, 7.8, 10.3, 4.2, 7.9, 5.2, 11.0, 5.2]\n",
        "}\n",
        "\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "# Step 2: Sort in ascending order of Flexible Remote\n",
        "df_sorted = df.sort_values(by='Flexible Remote', ascending=True)\n",
        "df_sorted['Industry'] = pd.Categorical(df_sorted['Industry'], categories=df_sorted['Industry'], ordered=True)\n",
        "\n",
        "# Step 3: Melt data for stacked bar format\n",
        "df_melted = df_sorted.melt(\n",
        "    id_vars='Industry',\n",
        "    value_vars=['Flexible Remote', 'Onsite'],\n",
        "    var_name='Remote Type',\n",
        "    value_name='Percentage'\n",
        ")\n",
        "\n",
        "# Step 4: Plot\n",
        "fig = px.bar(\n",
        "    df_melted,\n",
        "    x='Percentage',\n",
        "    y='Industry',\n",
        "    color='Remote Type',\n",
        "    orientation='h',\n",
        "    text='Percentage',\n",
        "    color_discrete_map={\n",
        "        'Flexible Remote': '#1aab89',\n",
        "        'Onsite': '#88d4c3'\n",
        "    },\n",
        "    title=\"Remote Job Distribution by Industry (Top 10 Industries)\"\n",
        ")\n",
        "\n",
        "# Step 5: Layout adjustments\n",
        "fig.update_layout(\n",
        "    xaxis_title=\"Percentage of Jobs\",\n",
        "    yaxis_title=\"\",\n",
        "    xaxis=dict(tickformat=\".0f\"),\n",
        "    legend_title=\"Remote Type\",\n",
        "    barmode='stack',\n",
        "    margin=dict(l=10, r=10, t=60, b=40),\n",
        "    height=500\n",
        ")\n",
        "\n",
        "# Step 6: Label formatting\n",
        "fig.update_traces(texttemplate='%{text:.1f}%', textposition='inside')\n",
        "\n",
        "# Save plot\n",
        "fig.write_html(\"./figures/top_industries.html\")\n",
        "\n",
        "\n",
        "# Show plot\n",
        "fig.show()\n"
      ],
      "id": "6fb4b1f3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.metrics import classification_report, confusion_matrix, f1_score, accuracy_score\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "id": "63d1e444",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "#read files\n",
        "file_path = \"./data/lightcast_job_postings.csv\"\n",
        "df = pd.read_csv(file_path)"
      ],
      "id": "6eeaed6d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "print(df['REMOTE_TYPE_NAME'].value_counts(dropna=False).head(10))"
      ],
      "id": "e899d1ba",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "# Step 1: Standardize formatting\n",
        "df['REMOTE_TYPE_NAME'] = (\n",
        "    df['REMOTE_TYPE_NAME']\n",
        "    .astype(str)\n",
        "    .str.strip()\n",
        "    .str.title()\n",
        "    .replace({'None': pd.NA, 'Nan': pd.NA})\n",
        ")"
      ],
      "id": "890fd03c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "# Step 2: Fill missing or ambiguous entries with 'Not Remote'\n",
        "df['REMOTE_TYPE_NAME'] = df['REMOTE_TYPE_NAME'].fillna('Not Remote')\n",
        "df.loc[df['REMOTE_TYPE_NAME'] == \"[None]\", 'REMOTE_TYPE_NAME'] = \"Not Remote\"\n",
        "print(df['REMOTE_TYPE_NAME'].value_counts(dropna=False).head(10))"
      ],
      "id": "6e80c906",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "# Convert all values to strings and strip whitespace\n",
        "df['REMOTE_TYPE_NAME'] = df['REMOTE_TYPE_NAME'].astype(str).str.strip()"
      ],
      "id": "e8f67843",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "# Apply new classification logic\n",
        "df['REMOTE_BINARY'] = df['REMOTE_TYPE_NAME'].apply(\n",
        "    lambda x: 1 if x in ['Remote', 'Hybrid Remote'] else 0\n",
        ")"
      ],
      "id": "4ee89d4d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "print(df['REMOTE_TYPE_NAME'].value_counts())\n",
        "print(\"\\nBinary classification:\")\n",
        "print(df['REMOTE_BINARY'].value_counts())"
      ],
      "id": "add662f8",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "# Ensure salary columns are numeric and handle missing values\n",
        "df['SALARY_FROM'] = pd.to_numeric(df['SALARY_FROM'], errors='coerce').replace(0, np.nan)\n",
        "df['SALARY_TO'] = pd.to_numeric(df['SALARY_TO'], errors='coerce').replace(0, np.nan)\n",
        "\n",
        "# Calculate average salary (mean of SALARY_FROM and SALARY_TO)\n",
        "df['AVERAGE_SALARY'] = df[['SALARY_FROM', 'SALARY_TO']].mean(axis=1)\n",
        "\n",
        "# Drop rows with missing values in AVERAGE_SALARY, REMOTE_TYPE_NAME, or STATE_NAME\n",
        "df_salary = df.dropna(subset=['AVERAGE_SALARY', 'REMOTE_TYPE_NAME', 'STATE_NAME'])\n",
        "\n",
        "# Group by state and remote type, then calculate average salary\n",
        "avg_salary_by_state_remote = df_salary.groupby(['STATE_NAME', 'REMOTE_TYPE_NAME'])['AVERAGE_SALARY'].mean().reset_index()\n",
        "\n",
        "# Round the results for easier reading\n",
        "avg_salary_by_state_remote['AVERAGE_SALARY'] = avg_salary_by_state_remote['AVERAGE_SALARY'].round(2)\n",
        "\n",
        "# Show results\n",
        "print(avg_salary_by_state_remote)"
      ],
      "id": "29e56140",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "df = df.merge(avg_salary_by_state_remote,\n",
        "              on=['STATE_NAME', 'REMOTE_TYPE_NAME'],\n",
        "              how='left')"
      ],
      "id": "0a59c29b",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "df = df.merge(\n",
        "    avg_salary_by_state_remote,\n",
        "    on=['STATE_NAME', 'REMOTE_TYPE_NAME'],\n",
        "    how='left',\n",
        "    suffixes=('', '_STATE_REMOTE_AVG')\n",
        ")"
      ],
      "id": "daed2fdd",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "[col for col in df.columns if 'AVG' in col or 'SALARY' in col]"
      ],
      "id": "af001eab",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "df = df.rename(columns={'AVERAGE_SALARY_y': 'AVERAGE_SALARY_STATE_REMOTE_AVG'})"
      ],
      "id": "bb1d9f4d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import OneHotEncoder, StandardScaler\n",
        "from sklearn.compose import ColumnTransformer\n",
        "from sklearn.pipeline import Pipeline\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.metrics import (accuracy_score, f1_score, confusion_matrix,\n",
        "                             classification_report, precision_score,\n",
        "                             recall_score, balanced_accuracy_score)\n",
        "from sklearn.inspection import permutation_importance\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt"
      ],
      "id": "384cf90c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "# Remove duplicate column names across full dataframe\n",
        "df = df.loc[:, ~df.columns.duplicated()]"
      ],
      "id": "e7bbfda3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "df['AVG_YEARS_EXPERIENCE'] = (df['MIN_YEARS_EXPERIENCE'] + df['MAX_YEARS_EXPERIENCE']) / 2\n",
        "df['EXP_SPREAD'] = df['MAX_YEARS_EXPERIENCE'] - df['MIN_YEARS_EXPERIENCE']"
      ],
      "id": "0c388427",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "df = df.drop(columns=['MIN_YEARS_EXPERIENCE', 'MAX_YEARS_EXPERIENCE'])"
      ],
      "id": "a9d4f59e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "num_feats = [\n",
        "    'AVG_YEARS_EXPERIENCE',\n",
        "    'AVERAGE_SALARY_STATE_REMOTE_AVG',\n",
        "    'IS_INTERNSHIP'\n",
        "]\n",
        "\n",
        "cat_feats = [\n",
        "    'STATE_NAME',\n",
        "    'NAICS_2022_2_NAME',\n",
        "    'EDUCATION_LEVELS_NAME',\n",
        "    'COMMON_SKILLS_NAME',\n",
        "    'SOFTWARE_SKILLS_NAME',\n",
        "    'TITLE_CLEAN'\n",
        "    \n",
        "]\n",
        "\n",
        "X = df[num_feats + cat_feats]\n",
        "y = df['REMOTE_BINARY']"
      ],
      "id": "863554a5",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import StandardScaler, OneHotEncoder\n",
        "from sklearn.compose import ColumnTransformer\n",
        "from sklearn.pipeline import Pipeline\n",
        "from sklearn.ensemble import RandomForestClassifier"
      ],
      "id": "2eb829b2",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "preprocess = ColumnTransformer(transformers=[\n",
        "    (\"num\", StandardScaler(), num_feats),\n",
        "    (\"cat\", OneHotEncoder(handle_unknown='ignore', sparse_output=False), cat_feats)\n",
        "])"
      ],
      "id": "351821a5",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "X_train, X_test, y_train, y_test = train_test_split(\n",
        "    X, y, test_size=0.2, random_state=42, stratify=y\n",
        ")"
      ],
      "id": "c434bc3a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "# Preprocessing step\n",
        "preprocess = ColumnTransformer(transformers=[\n",
        "    (\"num\", StandardScaler(), num_feats),\n",
        "    (\"cat\", OneHotEncoder(handle_unknown='ignore', max_categories=500, sparse_output=False), cat_feats)\n",
        "])\n",
        "clf = RandomForestClassifier(random_state=42, class_weight='balanced')"
      ],
      "id": "8e9258cb",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.pipeline import Pipeline\n",
        "\n",
        "rf = RandomForestClassifier(\n",
        "    n_estimators=200,\n",
        "    max_depth=None,\n",
        "    class_weight='balanced',\n",
        "    random_state=42,\n",
        "    n_jobs=-1\n",
        ")\n",
        "\n",
        "pipe = Pipeline(steps=[\n",
        "    ('prep', preprocess),\n",
        "    ('model', rf)\n",
        "])"
      ],
      "id": "88d71a81",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "pipe.fit(X_train, y_train)"
      ],
      "id": "cd4d965f",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "y_pred = pipe.predict(X_test)\n",
        "\n",
        "# Classification report and confusion matrix\n",
        "print(classification_report(y_test, y_pred))\n",
        "print(\"Confusion Matrix:\")\n",
        "print(confusion_matrix(y_test, y_pred))\n",
        "\n",
        "# Additional custom metrics\n",
        "print(\"\\nCustom Metrics:\")\n",
        "print(\"Accuracy:\", round(accuracy_score(y_test, y_pred), 3))\n",
        "print(\"F1 Score:\", round(f1_score(y_test, y_pred), 3))\n",
        "print(\"Precision:\", round(precision_score(y_test, y_pred), 3))\n",
        "print(\"Sensitivity (Recall 1):\", round(recall_score(y_test, y_pred), 3))\n",
        "print(\"Specificity (Recall 0):\", round(\n",
        "    recall_score(y_test, y_pred, pos_label=0), 3))\n",
        "print(\"Balanced Accuracy:\", round(balanced_accuracy_score(y_test, y_pred), 3))\n"
      ],
      "id": "e5936384",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "cm = confusion_matrix(y_test, y_pred)\n",
        "sns.heatmap(cm, annot=True, fmt='d', cmap='Blues')\n",
        "plt.xlabel(\"Predicted\")\n",
        "plt.ylabel(\"True\")\n",
        "plt.title(\"Confusion Matrix\")\n",
        "plt.show()"
      ],
      "id": "d3990a61",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "rf_model       = pipe.named_steps[\"model\"]          # RandomForestClassifier\n",
        "feature_names  = pipe.named_steps[\"prep\"].get_feature_names_out()\n",
        "\n",
        "importances = rf_model.feature_importances_\n",
        "\n",
        "feat_imp = (\n",
        "    pd.DataFrame({\"Feature\": feature_names, \"Importance\": importances})\n",
        "      .sort_values(by=\"Importance\", ascending=False)\n",
        "      .reset_index(drop=True)\n",
        ")\n",
        "\n",
        "print(\"\\nTop 9 – Tree-based Importances\")\n",
        "print(feat_imp.head(9).to_string(index=False))"
      ],
      "id": "df7d4e12",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "top_n = 9                     # change to show more/less\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.barplot(\n",
        "    data=feat_imp.head(top_n),\n",
        "    x=\"Importance\", y=\"Feature\",\n",
        "    palette=\"crest\"\n",
        ")\n",
        "plt.title(f\"Top {top_n} Feature Importances (Random Forest)\")\n",
        "plt.xlabel(\"Mean Decrease in Impurity\")\n",
        "plt.ylabel(\"\")\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "4ec25f48",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "\n",
        "# Step 1: Create state abbreviation mapping\n",
        "us_state_abbrev = {\n",
        "    'Alabama': 'AL', 'Alaska': 'AK', 'Arizona': 'AZ', 'Arkansas': 'AR',\n",
        "    'California': 'CA', 'Colorado': 'CO', 'Connecticut': 'CT', 'Delaware': 'DE',\n",
        "    'Florida': 'FL', 'Georgia': 'GA', 'Hawaii': 'HI', 'Idaho': 'ID',\n",
        "    'Illinois': 'IL', 'Indiana': 'IN', 'Iowa': 'IA', 'Kansas': 'KS',\n",
        "    'Kentucky': 'KY', 'Louisiana': 'LA', 'Maine': 'ME', 'Maryland': 'MD',\n",
        "    'Massachusetts': 'MA', 'Michigan': 'MI', 'Minnesota': 'MN', 'Mississippi': 'MS',\n",
        "    'Missouri': 'MO', 'Montana': 'MT', 'Nebraska': 'NE', 'Nevada': 'NV',\n",
        "    'New Hampshire': 'NH', 'New Jersey': 'NJ', 'New Mexico': 'NM', 'New York': 'NY',\n",
        "    'North Carolina': 'NC', 'North Dakota': 'ND', 'Ohio': 'OH', 'Oklahoma': 'OK',\n",
        "    'Oregon': 'OR', 'Pennsylvania': 'PA', 'Rhode Island': 'RI', 'South Carolina': 'SC',\n",
        "    'South Dakota': 'SD', 'Tennessee': 'TN', 'Texas': 'TX', 'Utah': 'UT',\n",
        "    'Vermont': 'VT', 'Virginia': 'VA', 'Washington': 'WA', 'West Virginia': 'WV',\n",
        "    'Wisconsin': 'WI', 'Wyoming': 'WY', 'District of Columbia': 'DC'\n",
        "}\n",
        "\n",
        "# Step 2: Map state names to abbreviations\n",
        "df['STATE_ABBR'] = df['STATE_NAME'].map(us_state_abbrev)\n",
        "\n",
        "# Step 3: Group by state and compute metrics\n",
        "choropleth_data = df.groupby('STATE_ABBR').agg(\n",
        "    remote_ratio=('REMOTE_BINARY', 'mean'),\n",
        "    avg_salary=('AVERAGE_SALARY_STATE_REMOTE_AVG', 'mean'),\n",
        "    avg_experience=('AVG_YEARS_EXPERIENCE', 'mean'),\n",
        "    job_count=('STATE_NAME', 'count')\n",
        ").reset_index()\n",
        "\n",
        "# Step 4: Define custom green scale (start from light, move to #1aab89)\n",
        "custom_green_scale = [\n",
        "    [0, \"#e0f7f1\"],     # light mint\n",
        "    [0.5, \"#70d8b5\"],   # mid-green\n",
        "    [1, \"#1aab89\"]      # deep teal green\n",
        "]\n",
        "\n",
        "# Step 5: Create the choropleth with custom green\n",
        "fig = px.choropleth(\n",
        "    data_frame=choropleth_data,\n",
        "    locations='STATE_ABBR',\n",
        "    locationmode=\"USA-states\",\n",
        "    color='remote_ratio',\n",
        "    color_continuous_scale=custom_green_scale,\n",
        "    scope=\"usa\",\n",
        "    labels={'remote_ratio': 'Remote Job Ratio'},\n",
        "    hover_data={\n",
        "        'remote_ratio': ':.2f',\n",
        "        'avg_salary': ':.0f',\n",
        "        'avg_experience': ':.1f',\n",
        "        'job_count': True\n",
        "    },\n",
        "    title='Remote Job Ratio by State (Custom Green), Avg Salary & Experience in Hover'\n",
        ")\n",
        "\n",
        "fig.update_layout(margin={\"r\":0,\"t\":40,\"l\":0,\"b\":0})\n",
        "fig.write_html(\"./figures/state_remote_job_ratio.html\")\n",
        "\n",
        "fig.show()\n"
      ],
      "id": "eadee89e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Step 1: Ensure 'POSTED' is in datetime format and create Year-Month\n",
        "df['POSTED'] = pd.to_datetime(df['POSTED'])\n",
        "df['POSTED_YM'] = df['POSTED'].dt.to_period('M').astype(str)"
      ],
      "id": "e33157e5",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "industry_trends = (\n",
        "    df.groupby(['NAICS_2022_2_NAME', 'POSTED_YM'])['REMOTE_BINARY']\n",
        "    .mean()\n",
        "    .reset_index(name='REMOTE_RATIO')\n",
        ")"
      ],
      "id": "22514129",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "# Step 3: Select top 5 industries with highest overall average remote ratio\n",
        "top_industries = (\n",
        "    industry_trends.groupby('NAICS_2022_2_NAME')['REMOTE_RATIO']\n",
        "    .mean()\n",
        "    .sort_values(ascending=False)\n",
        "    .head(5)\n",
        "    .index.tolist()\n",
        ")\n",
        "filtered_trends = industry_trends[industry_trends['NAICS_2022_2_NAME'].isin(top_industries)]"
      ],
      "id": "d7066d41",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "import plotly.express as px\n",
        "\n",
        "fig = px.line(\n",
        "    filtered_trends,\n",
        "    x='POSTED_YM',\n",
        "    y='REMOTE_RATIO',\n",
        "    color='NAICS_2022_2_NAME',\n",
        "    markers=True,\n",
        "    title=\"Top Industries: Remote Job Trends Over Time\"\n",
        ")\n",
        "\n",
        "fig.update_layout(\n",
        "    xaxis_title=\"Posted Month\",\n",
        "    yaxis_title=\"Remote Job Ratio\",\n",
        "    legend_title=\"Industry\",\n",
        "    legend=dict(x=1.02, y=1, bordercolor=\"Black\"),\n",
        "    margin=dict(l=40, r=40, t=60, b=40),\n",
        "    width=1000,\n",
        "    height=500\n",
        ")\n",
        "\n",
        "fig.update_xaxes(tickangle=45)\n",
        "fig.write_html(\"./figures/remote_job_over_time.html\")\n",
        "fig.show()"
      ],
      "id": "a7a8046e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "#Groupby industry + month and calculate both:\n",
        "industry_month_stats = df.groupby(['NAICS_2022_2_NAME', 'POSTED_YM']).agg(\n",
        "    TOTAL_JOBS=('REMOTE_BINARY', 'count'),\n",
        "    REMOTE_RATIO=('REMOTE_BINARY', 'mean')\n",
        ").reset_index()"
      ],
      "id": "fece0502",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "job_count = df.groupby(['NAICS_2022_2_NAME', 'POSTED_YM']).size().reset_index(name='JOB_COUNT')"
      ],
      "id": "385417fc",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "remote_ratio = df.groupby(['NAICS_2022_2_NAME', 'POSTED_YM'])['REMOTE_BINARY'].mean().reset_index(name='REMOTE_RATIO')"
      ],
      "id": "80025379",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "industry_month_stats = pd.merge(remote_ratio, job_count, on=['NAICS_2022_2_NAME', 'POSTED_YM'])"
      ],
      "id": "de04aae9",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Choose 2–3 industries to plot (or loop one at a time)\n",
        "selected_industries = [\n",
        "    'Administrative and Support and Waste Management and Remediation Services',\n",
        "    'Arts, Entertainment, and Recreation',\n",
        "    'Finance and Insurance',\n",
        "    'Real Estate and Rental and Leasing',\n",
        "    'Utilities'\n",
        "]\n",
        "\n",
        "\n",
        "\n",
        "for industry in selected_industries:\n",
        "    data = industry_month_stats[industry_month_stats['NAICS_2022_2_NAME'] == industry]  \n",
        "\n",
        "    fig, ax1 = plt.subplots(figsize=(10, 4))\n",
        "\n",
        "    # Plot remote ratio\n",
        "    ax1.plot(data['POSTED_YM'], data['REMOTE_RATIO'], color='tab:blue', marker='o')\n",
        "    ax1.set_xlabel('Month')\n",
        "    ax1.set_ylabel('Remote Job Ratio', color='tab:blue')\n",
        "    ax1.tick_params(axis='y', labelcolor='tab:blue')\n",
        "    ax1.set_title(f\"Remote Job Ratio & Volume Over Time: {industry}\")\n",
        "\n",
        "    # Plot job count on secondary y-axis\n",
        "    ax2 = ax1.twinx()\n",
        "    ax2.bar(data['POSTED_YM'], data['JOB_COUNT'], color='tab:gray', alpha=0.3)\n",
        "    ax2.set_ylabel('Total Job Postings', color='gray')\n",
        "    ax2.tick_params(axis='y', labelcolor='gray')\n",
        "\n",
        "    plt.xticks(rotation=45)\n",
        "    plt.tight_layout()\n",
        "    plt.savefig(\"./figures/Remote_jobs_\"+str(industry)+\".jpg\", dpi=300)\n",
        "    plt.show()\n"
      ],
      "id": "5bed1a63",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Random Forest results \n",
        "\n",
        "![Random Forest results](./figures/classification_report.png){width=90% fig-align=\"center\"}\n",
        "![Confustion Matrix](./figures/Confusion_matrix.png){width=90% fig-align=\"center\"}\n",
        "As the two plots displayed a clear results for random forest results, our group has set our target variable for predict people's preferences on Remote versus Onsite job, where 1 represents a remote job and 0 represents onsite. We also had a set of independent variables, including as: 'AVG_YEARS_EXPERIENCE', 'AVERAGE_SALARY_STATE_REMOTE_AVG', 'IS_INTERNSHIP', 'STATE_NAME', 'NAICS_2022_2_NAME'(industry) 'EDUCATION_LEVELS_NAME', 'COMMON_SKILLS_NAME',  'SOFTWARE_SKILLS_NAME',  'TITLE_CLEAN' (occupation). Meanwhile, we split the data into training and testing sets using an 80/20 ratio to ensure generalizability, This means 20% of the data will go into the test set, and 80% will go into the training set. Then we conduct the randam forest model analysis.\n",
        "According to plots, we can conclude the accuracy reached to 94.6%;F1 score as 84.7%, which reflects the robust balance between precision and recall; the precision as 99.4%, which means it has highly accurate rate on predict the results;the sensitivity for class1 as 73.8%, which means it correctly identified the 74% people who pick remote; the sensitivity for class 0 even reached to 99.9%, which means almost all the people who choose non-remote job has correctly classified; balanced accuracy as 86.8%, which represents there is a balance performance between both cases. \n",
        "From the confusion matrix, there has a detailed display, which represents the model correctly predicts 11536 people who choose onsite jobs with only 13 false positives, and it also orrectly predicts 2177 people who choose remote jobs with 774 missed results.\n",
        "\n",
        "One major limitation is class imbalance. Remote jobs (class 1) are the minority, which leads the model to perform less effectively on them.To counter this, we used class_weight='balanced' in our Random Forest to give more weight to underrepresented classes. We also built a preprocessing pipeline using ColumnTransformer for encoding categorical and scaling numerical features.Still, further optimization is needed. we recommended three ways to overcome this issue in the future study: Adjusting sample sizes;Tuning model hyperparameters, like n_estimators and max_categories;  experimenting with resampling techniques; add crossvalidation steps to void overfitting and ensure the final results' accuracy.\n",
        "\n",
        "#### Featured Importance\n",
        "![Featured importance](./figures/Featured_importance.png){width=90% fig-align=\"center\"}\n",
        "Based on the above plot, we can see the top 9 features could be essential in predicting the peoples'prefrences on remote or onsite jobs, we can see the top three essential features are average remote salary by state, Average years of experience and location state-California. These three features can be easily interpreted as the job's salary, job's requirement for year experiences and location are vital elements that impact people's decision on onsite or remote job types, peple prioritize jobs with high salary and better geographic location\n"
      ],
      "id": "3dd5e59c"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "\n",
        "import os\n",
        "\n",
        "file_path = './data/lightcast_job_postings.csv'\n",
        "if not os.path.exists(file_path):\n",
        "    raise FileNotFoundError(f\"Missing file: {file_path}\")"
      ],
      "id": "34759b4f",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: Skill Gap Analysis\n",
        "format:\n",
        "    html:\n",
        "        toc: true\n",
        "        toc-depth: 2\n",
        "execute:\n",
        "  echo: false   \n",
        "  message: false   \n",
        "  eval: true\n",
        "---"
      ],
      "id": "55d274c8"
    },
    {
      "cell_type": "code",
      "metadata": {
        "results": "hide"
      },
      "source": [
        "#| echo: false\n",
        "\n",
        "import findspark\n",
        "findspark.init()\n",
        "\n",
        "from pyspark.sql import SparkSession\n",
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.io as pio\n",
        "import numpy as np\n",
        "\n",
        "np.random.seed(42)\n",
        "\n",
        "pio.renderers.default = \"notebook\"\n",
        "\n",
        "# Initialize Spark Session\n",
        "spark = SparkSession.builder.appName(\"LightcastData\").getOrCreate()\n",
        "\n",
        "# Load Data\n",
        "df = spark.read.option(\"header\", \"true\").option(\"inferSchema\", \"true\").option(\"multiLine\",\"true\").option(\"escape\", \"\\\"\").csv(\"./data/lightcast_job_postings.csv\")\n"
      ],
      "id": "0f4dd928",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "results": "hide"
      },
      "source": [
        "#| echo: false\n",
        "df.createOrReplaceTempView(\"jobs\")"
      ],
      "id": "66d098b8",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "results": "hide"
      },
      "source": [
        "#| echo: false\n",
        "software_skill_counts_by_type = spark.sql(\"\"\"\n",
        "    SELECT software_skills_name, COUNT(*) AS count\n",
        "    FROM jobs\n",
        "    WHERE LOWER(title_name) LIKE '%analyst%'\n",
        "       OR LOWER(title_name) LIKE '%analysis%'\n",
        "       OR LOWER(title_name) LIKE '%analytics%'\n",
        "    GROUP BY software_skills_name\n",
        "    ORDER BY count DESC\n",
        "    LIMIT 10\n",
        "\"\"\")\n",
        "software_skill_counts_by_type.show(truncate=False)"
      ],
      "id": "b1791e2d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "results": "hide"
      },
      "source": [
        "#| echo: false\n",
        "skill_counts_by_type = spark.sql(\"\"\"\n",
        "    SELECT skills_name, COUNT(*) AS count\n",
        "    FROM jobs\n",
        "    WHERE LOWER(title_name) LIKE '%analyst%'\n",
        "    OR LOWER(title_name) LIKE '%analysis%'\n",
        "    OR LOWER(title_name) LIKE '%analytics%'\n",
        "    GROUP BY skills_name\n",
        "    ORDER BY count DESC\n",
        "    LIMIT 10\n",
        "\"\"\")\n",
        "skill_counts_by_type.show(truncate=False)"
      ],
      "id": "f49d307a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "results": "hide"
      },
      "source": [
        "#| echo: false\n",
        "import pandas as pd\n",
        "\n",
        "skills_data = {\n",
        "    \"Name\": [\"Alyssa\", \"Adam\", \"Yihan\"],\n",
        "    \"Microsoft Office\": [4, 5, 3],\n",
        "    \"Dashboard\": [3, 3, 1],\n",
        "    \"SQL\": [2, 2, 2],\n",
        "    \"OneStream\": [1, 1, 1],\n",
        "    \"Cloud Computing\": [2, 2, 2]\n",
        "}\n",
        "\n",
        "df_skills = pd.DataFrame(skills_data)\n",
        "df_skills.set_index(\"Name\", inplace=True)\n",
        "df_skills"
      ],
      "id": "5e6de328",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: false\n",
        "#| warning: false\n",
        "#| fig-cap: \"Skillset Analysis\"\n",
        "#| fig-align: center\n",
        "\n",
        "\n",
        "import pandas as pd\n",
        "import plotly.graph_objects as go\n",
        "\n",
        "# Your data\n",
        "skills_data = {\n",
        "    \"Name\": [\"Alyssa\", \"Adam\", \"Yihan\"],\n",
        "    \"Microsoft Office\": [4, 5, 3],\n",
        "    \"Dashboard\": [3, 3, 1],\n",
        "    \"SQL\": [2, 2, 2],\n",
        "    \"OneStream\": [0, 0, 0],\n",
        "    \"Cloud Computing\": [2, 2, 2]\n",
        "}\n",
        "\n",
        "# Create DataFrame\n",
        "df_skills = pd.DataFrame(skills_data)\n",
        "df_skills.set_index(\"Name\", inplace=True)\n",
        "\n",
        "# Get skill categories\n",
        "categories = df_skills.columns.tolist()\n",
        "\n",
        "# Create Plotly radar chart\n",
        "fig = go.Figure()\n",
        "\n",
        "for name in df_skills.index:\n",
        "    values = df_skills.loc[name].tolist()\n",
        "    values += values[:1]  # close the radar loop\n",
        "\n",
        "    fig.add_trace(go.Scatterpolar(\n",
        "        r=values,\n",
        "        theta=categories + [categories[0]],  # close the loop\n",
        "        fill='toself',\n",
        "        name=name\n",
        "    ))\n",
        "\n",
        "# Customize layout\n",
        "fig.update_layout(\n",
        "    polar=dict(\n",
        "        radialaxis=dict(\n",
        "            visible=True,\n",
        "            range=[0, 6]\n",
        "        )),\n",
        "    showlegend=True,\n",
        "    title=\"Team Skillset Levels\"\n",
        ")\n",
        "\n",
        "\n",
        "\n",
        "fig.write_html(\"./figures/skill_gap.html\", include_plotlyjs='cdn')\n",
        "\n",
        "#https://plotly.com/python/radar-chart/"
      ],
      "id": "e07dc90b",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "```{=html}\n",
        "<iframe width=\"1000\" height=\"700\" src=\"./figures/skill_gap.html\" title=\"Skill Gap Analysis\"></iframe>\n",
        "```\n",
        "\n",
        "The radar chart above displays each individual evaluation of our skills for the top five skills on demand for analyst roles.\n",
        "\n",
        "# Recomendations\n",
        "\n",
        "Given our analysis above, we have decided to focus on some of the key actions and learning goals that each of us can take in order to further our chances of landing a high quality position in our chosen industry.\n",
        "\n",
        "\n",
        "### SQL\n",
        "\n",
        "#### Beginner\n",
        "\n",
        "We recommend using tools such as SQLBolt to begin developing a foundational understanding of basic syntax, queries, and selecting columns from datasets. This will build familiarity with the program itself and develop a confidence in import and simple manipulation of data.\n",
        "\n",
        "#### Intermediate\n",
        "\n",
        "Next, we will incorporate real-world data sets (ex. Kaggle) to begin creating analysis. As an example, you could utilize sales data, new customers, inventory levels, certain trends over time, etc. Utilizng applications such as LinkedIn Learning or Coursera can assist with this.\n",
        "\n",
        "\n",
        "#### Advanced \n",
        "\n",
        "At this stage, we will aim for constructing pipelines that are sufficient from beginning to end and that integrate a prouction quality result. As a final step, DataLemur provides candidates with interview questions that correspond to SQL and have been confirmed by various companies such as Amazon, Google, etc.\n",
        "\n",
        "\n",
        "### OneStream\n",
        "\n",
        "It is important to note that this is a private software application so receiving quality training will be difficult without being sponsored by a company.\n",
        "\n",
        "#### Beginner \n",
        "\n",
        "Youtube is the best resource for beginning to familiarize yourself with the main functionality and goals of the software. The company does have their own channel, so it would be advised to watch their videos and learn more about what the application does and how it works.\n",
        "\n",
        "\n",
        "#### Intermediate \n",
        "\n",
        "Consider purchasing an online course through Udemy or Keyteach. While this does require personal spending, it would be the easiest way to gain an understanding without requiring an official license to operate the software. This would help to practice working with the application and exploring key concepts.\n",
        "\n",
        "#### Advanced\n",
        "\n",
        "This stage would be difficult, because you would need access to the software in order to achieve an advanced level. If you are employed (especially in the financial services industry) consider asking IT for access. There you can work more on complicated structures such as macros and visualization.\n",
        "\n",
        "\n",
        "### AWS\n",
        "\n",
        "#### Beginner\n",
        "\n",
        "AWS offers free tier accounts where users can begin learning the basic structure of the applications that are offered. Additionally, there are various free courses that are offered by AWS Academy. \n",
        "\n",
        "#### Intermediate\n",
        "\n",
        "Incorporate real world data within AWS to create a storage structure, run queries, and visualize data. Additionally, you can reference Youtube or LinkedIn learning to learn more about EC2 capabilities and Quicksight (for visualization).\n",
        "\n",
        "#### Advanced\n",
        "\n",
        "Consider learning more about best practices and cost structuring, which will be crucial components of AWS design in a real world company. The goal of this is to begin optimizing your pipelines to make sure that they are production quality. To achieve this, consider completing the AWS Certified Data Analytics course.\n",
        "\n",
        "\n",
        "### Power BI\n",
        "\n",
        "#### Beginner\n",
        "\n",
        "At the beginner level it is important to understand the basic UI interface of the application, such as importing data and generating visuals (bar charts, line charts, cards, etc.). Microsoft Learn can help to achieve this with their beginner course.\n",
        "\n",
        "\n",
        "#### Intermediate \n",
        "\n",
        "At this point, you should have the ability to use more complicated processes such as data cleaning, DAX functions, and establishing relationships between multiple datasets. Again, Microsoft Learn has courses called \"Design Power BI reports\" and \"Configure Power BI report filters\" that will help achieve this competency.\n",
        "\n",
        "#### Advanced\n",
        "\n",
        "By now, you should be able to connect your dashboard to other applications like SQL or APIs. Your dashboards should have multiple pages, which include dynamic formatting and the ability to automatically refresh.\n",
        "\n",
        "\n",
        "### Office 365\n",
        "\n",
        "This will be broken down into 3 of the most common applications with an emphasis on Excel. Microsoft 365 is the recommended training tool, as it has learning courses available for all levels.\n",
        "\n",
        "#### Beginner\n",
        "\n",
        "Excel: Standard formulas are used such as SUMIF and VLOOKUP. There is familarity with pivot charts and conditional formatting.\n",
        "Outlook: User has the ability to schedule meetings and establish designated email folders.\n",
        "PowerPoint: There is an understanding of presentation structure, as well as formatting and placement of text and visuals.\n",
        "\n",
        "#### Intermediate\n",
        "\n",
        "Excel: Power Query, Data Validation tabs, Index formulas, KPI dashboards with slicers.\n",
        "Outlook: Creating shared calendars and group inboxes.\n",
        "PowerPoint: Linking visuals from other applications, such as Excel.\n",
        "\n",
        "#### Advanced\n",
        "Excel: VBA and macros combined with dynamic visuals.\n",
        "PowerPoint: Creating custom templates to align with a company's brand.\n",
        "\n",
        "---\n",
        "title: \"About\"\n",
        "---\n",
        "\n",
        "Hello \n",
        "\n",
        "About this site\n",
        "\n",
        "\n",
        "## References"
      ],
      "id": "cf664ff9"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Program Files\\Python312\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}